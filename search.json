[{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Felix D. Schönbrodt. Author, maintainer.","code":""},{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schönbrodt F (2023). OAmetrics: Compute Bibliometric Indices Calling OpenAlex API. R package version 0.1.0, https://nicebread.github.io/OAmetrics/.","code":"@Manual{,   title = {OAmetrics: Compute Bibliometric Indices by Calling the OpenAlex API},   author = {Felix D. Schönbrodt},   year = {2023},   note = {R package version 0.1.0},   url = {https://nicebread.github.io/OAmetrics/}, }"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"oametrics","dir":"","previous_headings":"","what":"Compute Bibliometric Indices by Calling the OpenAlex API","title":"Compute Bibliometric Indices by Calling the OpenAlex API","text":"R package computing several bibliometric indices calling OpenAlex database API. can install developer version OAmetrics GitHub :","code":"install.packages(\"remotes\") remotes::install_github(\"nicebread/OAmetrics\")"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"known-issues--todos","dir":"","previous_headings":"","what":"Known issues / TODOs","title":"Compute Bibliometric Indices by Calling the OpenAlex API","text":"use options(select = ...) reduce API load FNCS: paper assigned multiple fields, weighted average get_reference_set: around 20% sampled document duplicates. Ensure unique documents sampled (use paging?)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"FNCS defined ... (TODO) percentage rank \"CP-EX\" measure described Bornmann & Williams (2020), returns percentage publication less citations (\"less equal\"). many publications 0 citations, alternative CP-measure (return \"less equal\") returns often high percentiles although paper 0 citations. intuitive. percentile rank, function uses linear interpolation (cf. Bornmann & Williams, 2020) using function provided Tal Galili (https://stats.stackexchange.com/q/230458)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"FNCS(dois, ref_set, upper_trim = 0)"},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"dois character vector DOI paper FNCS computed. ref_set data frame containing reference set paper interest. object get_reference_set function. upper_trim numeric value 0 1 indicates fraction values trimmed upper end reference set. Scheidsteger et al. (2023) remove upper 1 percent citation counts using OpenAlex. affects FNCS, percentile rank (FNPR).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"list containing computed FNCS percentile rank paper. latter CP-EX measure means \"many citations reference set less citations target paper\".","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"Bornmann, L., & Williams, R. (2020). evaluation percentile measures citation impact, proposal making better. Scientometrics, 124(2), 1457–1478. https://doi.org/10.1007/s11192-020-03512-7 Scheidsteger, T., Haunschild, R., & Bornmann, L. (2023). similar field-normalized scores different free commercial databases calculated large German universities? https://dapp.orvium.io/deposits/6441118c643beb0d90fc543f/view","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"if (FALSE) { # TODO: ref_set does not exist yet FNCS(dois = \"10.1038/s41586-019-1712-z\", ref_set = ref_set, upper_trim = .01) }"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":null,"dir":"Reference","previous_headings":"","what":"ecdf2 — ecdf2","title":"ecdf2 — ecdf2","text":"Calculates linearly interpolated empirical cumulative distribution function (ecdf) vector values. function provided Tal Galili StackOverflow.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecdf2 — ecdf2","text":"","code":"ecdf2(x)"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecdf2 — ecdf2","text":"x vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ecdf2 — ecdf2","text":"function calculates linearly interpolated ecdf vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ecdf2 — ecdf2","text":"","code":"x <- c(0,0,0,0,0,0,1,1,1,1,2,2,2,5,7,11,20,100) ecdf2(x) #> Empirical CDF  #> Call: ecdf2(x) #>  x[1:8] =      0,      1,      2,  ...,     20,    100"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Journal Impact Factor — get_JIF","title":"Compute the Journal Impact Factor — get_JIF","text":"function computes Journal Impact Factor (JIF) given journal given ISSN target year.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn, year, verbose = FALSE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Journal Impact Factor — get_JIF","text":"issn ISSN journal year target year verbose Whether print verbose output (default FALSE)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Journal Impact Factor — get_JIF","text":"data frame columns journal, ISSN, year, total_citations, citable_items JIF.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn=\"0022-3514\", year=2018)  # JPSP #>                                             so      issn year total_citations #> 1 Journal of Personality and Social Psychology 0022-3514 2018            1685 #>   citable_items      JIF #> 1           219 7.694064 get_JIF(issn=\"0890-2070\", year=2019)  # EJP #>                                so      issn year total_citations citable_items #> 1 European Journal of Personality 0890-2070 2019             300            70 #>        JIF #> 1 4.285714"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reference set for field normalized citation rates — get_reference_set","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"function downloads large set publications certain field certain years. Retrieving 10,000 documents API takes 1-2 min. Ideally, cached locally.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"get_reference_set(   years,   n_per_year = 10000,   concept.id = \"C15744967\",   verbose = TRUE,   seed = NULL,   save_intermediate = NULL )"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"years year(s) sample reference field retrieved. n_per_year number documents retrieve per requested year (optional, defaults 10000). Values larger 10000 possible (split multiple OA requests). concept.id vector concept.ids search (optional, defaults \"C15744967\", .e. \"Psychology\") verbose Show OA API progress? seed Set seed reproducible analyses. However, underlying OA database changes frequently, results still stable ... save_intermediate path provided , intermediate downloaded files saved path.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"data frame containing document id, year, cited_by_count, number authors retrieved documents","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"# Get reference set for \"Psychology\" for multiple years (small n here for demo) psych_ref <- get_reference_set(   2013:2020, n_per_year = 100,   concept.id = \"C15744967\"  ) #> [1] \"2023-05-25 09:29:38.72891: Retrieving documents for 2013 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2013-01-01%2Cto_publication_date%3A2013-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:40.021885: Retrieving documents for 2014 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2014-01-01%2Cto_publication_date%3A2014-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:41.294494: Retrieving documents for 2015 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2015-01-01%2Cto_publication_date%3A2015-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:42.58805: Retrieving documents for 2016 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2016-01-01%2Cto_publication_date%3A2016-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:43.839438: Retrieving documents for 2017 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2017-01-01%2Cto_publication_date%3A2017-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:45.176383: Retrieving documents for 2018 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2018-01-01%2Cto_publication_date%3A2018-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:46.464654: Retrieving documents for 2019 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2019-01-01%2Cto_publication_date%3A2019-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\" #> [1] \"2023-05-25 09:29:47.816633: Retrieving documents for 2020 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Ajournal-article%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2020-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=100 #> Getting 1 page of results with a total of 100 records... #> [1] \"Retrieved 100 documents\""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Get reference set from files — get_reference_set_from_files","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"get_reference_set function can save intermediate files drive. case download function aborts error, existing files given path can read combined.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"","code":"get_reference_set_from_files(path)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"path relative absolute path files","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"Returns data frame reference set.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute h-index and hIa-index — h_index","title":"Compute h-index and hIa-index — h_index","text":"TODO: time-window (currently, uses citations since publication).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(   search = NULL,   display_name = NULL,   author.id = NULL,   first_pub_year = NA,   academic_age_bonus = 0 )"},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute h-index and hIa-index — h_index","text":"search character string author's name searching OpenAlex API. Allows fuzzy search (e.g. without middle initial). display_name character vector exact author's names searching OpenAlex API. cvan provide multiple variants vector. author.id character vector OpenAlex author ID(s) (.e., ID starting \".......\") searching OpenAlex API. first_pub_year integer year author's first publication. provided, estimated retrieved publications. academic_age_bonus Years subtracted active academic life (e.g. due child care). example, SNF subtracts 1.5 years per child (see https://www.snf.ch/en/cciM9NWuvhOVKRxv/news/news-200803-career-funding--researchers-overall-performance-counts).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute h-index and hIa-index — h_index","text":"list containing net academic age, h-index hIa-index author.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute h-index and hIa-index — h_index","text":"Computes h-index hIa-index author. need provide exactly one parameters search, display_name author.id: search allows fuzzy search author's name (e.g. without middle initial). Might return many matches display_name requires exact match allows provide vector multiple versions name (e.g., c(\"Hans Müller\", \"Hans Mueller\", \"Hans J. Muller\")) author.id OpenAlex ID authors. Often author listed different IDs OpenAlex database, therefore merged function. function includes wrong authors? need manually screen table author names, record IDs correct aliases target person (starting \".......\") enter author IDs author.id parameter.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(search = \"Felix Schönbrodt\") #> Error in (function (..., deparse.level = 1, make.row.names = TRUE, stringsAsFactors = FALSE,     factor.exclude = TRUE) {    match.names <- function(clabs, nmi) {        if (identical(clabs, nmi))             NULL        else if (length(nmi) == length(clabs) && all(nmi %in%             clabs)) {            m <- pmatch(nmi, clabs, 0L)            if (any(m == 0L))                 stop(\"names do not match previous names\")            m        }        else stop(\"names do not match previous names\")    }    allargs <- list(...)    allargs <- allargs[lengths(allargs) > 0L]    if (length(allargs)) {        nr <- vapply(allargs, function(x) if (is.data.frame(x))             .row_names_info(x, 2L)        else if (is.list(x))             length(x[[1L]])        else length(x), 1L)        if (any(n0 <- nr == 0L)) {            if (all(n0))                 return(allargs[[1L]])            allargs <- allargs[!n0]        }    }    n <- length(allargs)    if (n == 0L)         return(list2DF())    nms <- names(allargs)    if (is.null(nms))         nms <- character(n)    cl <- NULL    perm <- rows <- vector(\"list\", n)    if (make.row.names) {        rlabs <- rows        autoRnms <- TRUE        Make.row.names <- function(nmi, ri, ni, nrow) {            if (nzchar(nmi)) {                if (autoRnms)                   autoRnms <<- FALSE                if (ni == 0L)                   character()                else if (ni > 1L)                   paste(nmi, ri, sep = \".\")                else nmi            }            else if (autoRnms && nrow > 0L && identical(ri, seq_len(ni)))                 as.integer(seq.int(from = nrow + 1L, length.out = ni))            else {                if (autoRnms && (nrow > 0L || !identical(ri,                   seq_len(ni))))                   autoRnms <<- FALSE                ri            }        }    }    smartX <- isTRUE(factor.exclude)    nrow <- 0L    value <- clabs <- NULL    all.levs <- list()    for (i in seq_len(n)) {        xi <- allargs[[i]]        nmi <- nms[i]        if (is.matrix(xi))             allargs[[i]] <- xi <- as.data.frame(xi, stringsAsFactors = stringsAsFactors)        if (inherits(xi, \"data.frame\")) {            if (is.null(cl))                 cl <- oldClass(xi)            ri <- attr(xi, \"row.names\")            ni <- length(ri)            if (is.null(clabs))                 clabs <- names(xi)            else {                if (length(xi) != length(clabs))                   stop(\"numbers of columns of arguments do not match\")                pi <- match.names(clabs, names(xi))                if (!is.null(pi))                   perm[[i]] <- pi            }            rows[[i]] <- seq.int(from = nrow + 1L, length.out = ni)            if (make.row.names)                 rlabs[[i]] <- Make.row.names(nmi, ri, ni, nrow)            nrow <- nrow + ni            if (is.null(value)) {                value <- unclass(xi)                nvar <- length(value)                all.levs <- vector(\"list\", nvar)                has.dim <- facCol <- ordCol <- logical(nvar)                if (smartX)                   NA.lev <- ordCol                for (j in seq_len(nvar)) {                  xj <- value[[j]]                  facCol[j] <- fac <- if (!is.null(lj <- levels(xj))) {                    all.levs[[j]] <- lj                    TRUE                  }                  else is.factor(xj)                  if (fac) {                    ordCol[j] <- is.ordered(xj)                    if (smartX && !NA.lev[j])                       NA.lev[j] <- anyNA(lj)                  }                  has.dim[j] <- length(dim(xj)) == 2L                }            }            else for (j in seq_len(nvar)) {                xij <- xi[[j]]                if (is.null(pi) || is.na(jj <- pi[[j]]))                   jj <- j                if (facCol[jj]) {                  if (length(lij <- levels(xij))) {                    all.levs[[jj]] <- unique(c(all.levs[[jj]],                       lij))                    if (ordCol[jj])                       ordCol[jj] <- is.ordered(xij)                    if (smartX && !NA.lev[jj])                       NA.lev[jj] <- anyNA(lij)                  }                  else if (is.character(xij))                     all.levs[[jj]] <- unique(c(all.levs[[jj]],                       xij))                }            }        }        else if (is.list(xi)) {            ni <- range(lengths(xi))            if (ni[1L] == ni[2L])                 ni <- ni[1L]            else stop(\"invalid list argument: all variables should have the same length\")            ri <- seq_len(ni)            rows[[i]] <- seq.int(from = nrow + 1L, length.out = ni)            if (make.row.names)                 rlabs[[i]] <- Make.row.names(nmi, ri, ni, nrow)            nrow <- nrow + ni            if (length(nmi <- names(xi)) > 0L) {                if (is.null(clabs))                   clabs <- nmi                else {                  if (length(xi) != length(clabs))                     stop(\"numbers of columns of arguments do not match\")                  pi <- match.names(clabs, nmi)                  if (!is.null(pi))                     perm[[i]] <- pi                }            }        }        else if (length(xi)) {            rows[[i]] <- nrow <- nrow + 1L            if (make.row.names)                 rlabs[[i]] <- if (nzchar(nmi))                   nmi                else as.integer(nrow)        }    }    nvar <- length(clabs)    if (nvar == 0L)         nvar <- max(lengths(allargs))    if (nvar == 0L)         return(list2DF())    pseq <- seq_len(nvar)    if (is.null(value)) {        value <- list()        value[pseq] <- list(logical(nrow))        all.levs <- vector(\"list\", nvar)        has.dim <- facCol <- ordCol <- logical(nvar)        if (smartX)             NA.lev <- ordCol    }    names(value) <- clabs    for (j in pseq) if (length(lij <- all.levs[[j]]))         value[[j]] <- factor(as.vector(value[[j]]), levels = lij,             exclude = if (smartX) {                if (!NA.lev[j])                   NA            }            else factor.exclude, ordered = ordCol[j])    if (any(has.dim)) {        jdim <- pseq[has.dim]        if (!all(df <- vapply(jdim, function(j) inherits(value[[j]],             \"data.frame\"), NA))) {            rmax <- max(unlist(rows))            for (j in jdim[!df]) {                dn <- dimnames(vj <- value[[j]])                rn <- dn[[1L]]                if (length(rn) > 0L)                   length(rn) <- rmax                pj <- dim(vj)[2L]                length(vj) <- rmax * pj                value[[j]] <- array(vj, c(rmax, pj), list(rn,                   dn[[2L]]))            }        }    }    for (i in seq_len(n)) {        xi <- unclass(allargs[[i]])        if (!is.list(xi))             if ((ni <- length(xi)) != nvar) {                if (ni && nvar%%ni != 0)                   warning(gettextf(\"number of columns of result, %d, is not a multiple of vector length %d of arg %d\",                     nvar, ni, i), domain = NA)                xi <- rep_len(xi, nvar)            }        ri <- rows[[i]]        pi <- perm[[i]]        if (is.null(pi))             pi <- pseq        for (j in pseq) {            jj <- pi[j]            xij <- xi[[j]]            if (has.dim[jj]) {                value[[jj]][ri, ] <- xij                if (!is.null(r <- rownames(xij)) && !(inherits(xij,                   \"data.frame\") && .row_names_info(xij) <= 0))                   rownames(value[[jj]])[ri] <- r            }            else {                value[[jj]][ri] <- if (is.factor(xij))                   as.vector(xij)                else xij                if (!is.null(nm <- names(xij)))                   names(value[[jj]])[ri] <- nm            }        }    }    rlabs <- if (make.row.names && !autoRnms) {        rlabs <- unlist(rlabs)        if (anyDuplicated(rlabs))             make.unique(as.character(rlabs), sep = \"\")        else rlabs    }    if (is.null(cl)) {        as.data.frame(value, row.names = rlabs, fix.empty.names = TRUE,             stringsAsFactors = stringsAsFactors)    }    else {        structure(value, class = cl, row.names = if (is.null(rlabs))             .set_row_names(nrow)        else rlabs)    }})(structure(list(id = \"https://openalex.org/A4357550802\", works_count = 226L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4357550802\",     cited_by_count = 6148L, relevance_score = 3205.9766, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2012, works_count = c(0L,     17L, 18L, 22L, 19L, 36L, 23L, 44L, 19L, 10L, 2L, 5L), cited_by_count = c(468L,     1205L, 1188L, 1316L, 829L, 516L, 261L, 131L, 104L, 62L, 22L,     19L)), class = \"data.frame\", row.names = c(NA, -12L))), x_concepts = list(        structure(list(id = c(\"https://openalex.org/C41008148\",         \"https://openalex.org/C15744967\", \"https://openalex.org/C33923547\",         \"https://openalex.org/C77805123\", \"https://openalex.org/C138885662\",         \"https://openalex.org/C105795698\", \"https://openalex.org/C17744445\",         \"https://openalex.org/C162324750\", \"https://openalex.org/C199539241\",         \"https://openalex.org/C71924100\", \"https://openalex.org/C86803240\",         \"https://openalex.org/C111472728\", \"https://openalex.org/C121332964\",         \"https://openalex.org/C144024400\", \"https://openalex.org/C154945302\",         \"https://openalex.org/C119857082\", \"https://openalex.org/C11171543\"        ), wikidata = c(\"https://www.wikidata.org/wiki/Q21198\",         \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q395\",         \"https://www.wikidata.org/wiki/Q161272\", \"https://www.wikidata.org/wiki/Q5891\",         \"https://www.wikidata.org/wiki/Q12483\", \"https://www.wikidata.org/wiki/Q36442\",         \"https://www.wikidata.org/wiki/Q8134\", \"https://www.wikidata.org/wiki/Q7748\",         \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q420\",         \"https://www.wikidata.org/wiki/Q9471\", \"https://www.wikidata.org/wiki/Q413\",         \"https://www.wikidata.org/wiki/Q21201\", \"https://www.wikidata.org/wiki/Q11660\",         \"https://www.wikidata.org/wiki/Q2539\", \"https://www.wikidata.org/wiki/Q41630\"        ), display_name = c(\"Computer science\", \"Psychology\",         \"Mathematics\", \"Social psychology\", \"Philosophy\", \"Statistics\",         \"Political science\", \"Economics\", \"Law\", \"Medicine\",         \"Biology\", \"Epistemology\", \"Physics\", \"Sociology\", \"Artificial intelligence\",         \"Machine learning\", \"Psychoanalysis\"), level = c(0L,         0L, 0L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, 0L, 1L, 0L, 0L, 1L,         1L, 1L), score = c(69, 65.9, 54, 46, 46, 43.8, 37.2,         33.2, 32.3, 29.2, 29.2, 28.3, 27.4, 25.7, 24.8, 21.7,         20.4)), class = \"data.frame\", row.names = c(NA, -17L))),     ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4357550802\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4358859795\", works_count = 2L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4358859795\",     cited_by_count = 4L, relevance_score = 83.80952, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = c(2021L, 2020L,     2018L, 2017L), works_count = c(0L, 0L, 0L, 2L), cited_by_count = c(1L,     2L, 1L, 0L)), class = \"data.frame\", row.names = c(NA, -4L    ))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C33923547\",     \"https://openalex.org/C65409693\", \"https://openalex.org/C71924100\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C126322002\",     \"https://openalex.org/C149782125\", \"https://openalex.org/C162324750\",     \"https://openalex.org/C15744967\"), wikidata = c(\"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q425265\", \"https://www.wikidata.org/wiki/Q11190\",     \"https://www.wikidata.org/wiki/Q12483\", \"https://www.wikidata.org/wiki/Q11180\",     \"https://www.wikidata.org/wiki/Q160039\", \"https://www.wikidata.org/wiki/Q8134\",     \"https://www.wikidata.org/wiki/Q9418\"), display_name = c(\"Mathematics\",     \"Statistical significance\", \"Medicine\", \"Statistics\", \"Internal medicine\",     \"Econometrics\", \"Economics\", \"Psychology\"), level = c(0L,     2L, 0L, 1L, 1L, 1L, 0L, 0L), score = c(100, 100, 100, 100,     100, 100, 100, 50)), class = \"data.frame\", row.names = c(NA,     -8L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4358859795\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4319643956\", works_count = 1L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4319643956\",     cited_by_count = 3L, relevance_score = 70.819695, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2022, works_count = 1:0,         cited_by_count = 1:2), class = \"data.frame\", row.names = c(NA,     -2L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C38652104\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C41895202\",     \"https://openalex.org/C86844869\", \"https://openalex.org/C95457728\",     \"https://openalex.org/C111472728\", \"https://openalex.org/C111919701\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C166957645\",     \"https://openalex.org/C199539241\", \"https://openalex.org/C205649164\",     \"https://openalex.org/C2522767166\", \"https://openalex.org/C2778473407\",     \"https://openalex.org/C2780224610\"), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q36442\", \"https://www.wikidata.org/wiki/Q3510521\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q8162\",     \"https://www.wikidata.org/wiki/Q2798820\", \"https://www.wikidata.org/wiki/Q309\",     \"https://www.wikidata.org/wiki/Q9471\", \"https://www.wikidata.org/wiki/Q9135\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q23498\",     \"https://www.wikidata.org/wiki/Q7748\", \"https://www.wikidata.org/wiki/Q1071\",     \"https://www.wikidata.org/wiki/Q2374463\", \"https://www.wikidata.org/wiki/Q1459574\",     \"https://www.wikidata.org/wiki/Q1530061\"), display_name = c(\"Psychology\",     \"Political science\", \"Computer security\", \"Computer science\",     \"Linguistics\", \"Hacker\", \"History\", \"Epistemology\", \"Operating system\",     \"Philosophy\", \"Archaeology\", \"Law\", \"Geography\", \"Data science\",     \"Compendium\", \"Credibility\"), level = c(0L, 0L, 1L, 0L, 1L,     2L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 2L, 2L), score = c(100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -16L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4319643956\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4359968789\", works_count = 3L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4359968789\",     cited_by_count = 2L, relevance_score = 59.686153, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = c(2023L, 2022L,     2020L, 2016L), works_count = c(0L, 1L, 0L, 2L), cited_by_count = c(2L,     0L, 2L, 0L)), class = \"data.frame\", row.names = c(NA, -4L    ))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C26760741\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C71924100\",     \"https://openalex.org/C77805123\", \"https://openalex.org/C86803240\",     \"https://openalex.org/C111472728\", \"https://openalex.org/C119857082\",     \"https://openalex.org/C144024400\", \"https://openalex.org/C169760540\",     \"https://openalex.org/C180747234\", \"https://openalex.org/C17744445\",     \"https://openalex.org/C17822864\", \"https://openalex.org/C24890656\",     \"https://openalex.org/C27206212\", \"https://openalex.org/C31972630\",     \"https://openalex.org/C33923547\", \"https://openalex.org/C36289849\",     \"https://openalex.org/C38022665\", \"https://openalex.org/C41895202\",     \"https://openalex.org/C46312422\", \"https://openalex.org/C50718005\",     \"https://openalex.org/C62520636\", \"https://openalex.org/C70410870\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q5891\",     \"https://www.wikidata.org/wiki/Q160402\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q161272\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q2539\", \"https://www.wikidata.org/wiki/Q21201\",     \"https://www.wikidata.org/wiki/Q207011\", \"https://www.wikidata.org/wiki/Q23373\",     \"https://www.wikidata.org/wiki/Q36442\", \"https://www.wikidata.org/wiki/Q6007588\",     \"https://www.wikidata.org/wiki/Q82811\", \"https://www.wikidata.org/wiki/Q34178\",     \"https://www.wikidata.org/wiki/Q844240\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q34749\", \"https://www.wikidata.org/wiki/Q1149305\",     \"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q11024\",     \"https://www.wikidata.org/wiki/Q4392985\", \"https://www.wikidata.org/wiki/Q944\",     \"https://www.wikidata.org/wiki/Q199906\"), display_name = c(\"Psychology\",     \"Philosophy\", \"Perception\", \"Computer science\", \"Medicine\",     \"Social psychology\", \"Biology\", \"Epistemology\", \"Machine learning\",     \"Sociology\", \"Neuroscience\", \"Cognitive psychology\", \"Political science\",     \"Impression formation\", \"Acoustics\", \"Theology\", \"Computer vision\",     \"Mathematics\", \"Social science\", \"Disposition\", \"Linguistics\",     \"Communication\", \"Religious identity\", \"Quantum mechanics\",     \"Clinical psychology\"), level = c(0L, 0L, 2L, 0L, 0L, 1L,     0L, 1L, 1L, 0L, 1L, 1L, 0L, 4L, 1L, 1L, 1L, 0L, 1L, 2L, 1L,     1L, 3L, 1L, 1L), score = c(100, 100, 66.7, 66.7, 66.7, 66.7,     66.7, 66.7, 66.7, 66.7, 66.7, 66.7, 33.3, 33.3, 33.3, 33.3,     33.3, 33.3, 33.3, 33.3, 33.3, 33.3, 33.3, 33.3, 33.3)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4359968789\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4309994284\", works_count = 1L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4309994284\",     cited_by_count = 1L, relevance_score = 43.632336, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2022, works_count = 0:1,         cited_by_count = 1:0), class = \"data.frame\", row.names = c(NA,     -2L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C2482559\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C17744445\",     \"https://openalex.org/C33923547\", \"https://openalex.org/C39549134\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C41458344\",     \"https://openalex.org/C41895202\", \"https://openalex.org/C55587333\",     \"https://openalex.org/C62520636\", \"https://openalex.org/C75630572\",     \"https://openalex.org/C77805123\", \"https://openalex.org/C94625758\",     \"https://openalex.org/C95457728\", \"https://openalex.org/C98147612\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C112698675\", \"https://openalex.org/C121332964\",     \"https://openalex.org/C124952713\", \"https://openalex.org/C127413603\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C142362112\",     \"https://openalex.org/C144133560\", \"https://openalex.org/C151719136\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q206330\",     \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q395\", \"https://www.wikidata.org/wiki/Q133080\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q732577\",     \"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q1133029\",     \"https://www.wikidata.org/wiki/Q944\", \"https://www.wikidata.org/wiki/Q538904\",     \"https://www.wikidata.org/wiki/Q161272\", \"https://www.wikidata.org/wiki/Q7163\",     \"https://www.wikidata.org/wiki/Q309\", \"https://www.wikidata.org/wiki/Q215599\",     \"https://www.wikidata.org/wiki/Q12483\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q37038\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q8242\", \"https://www.wikidata.org/wiki/Q11023\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q735\",     \"https://www.wikidata.org/wiki/Q4830453\", \"https://www.wikidata.org/wiki/Q3972943\"    ), display_name = c(\"Objectivity (philosophy)\", \"Psychology\",     \"Political science\", \"Mathematics\", \"Public relations\", \"Computer science\",     \"Publication\", \"Linguistics\", \"Engineering ethics\", \"Quantum mechanics\",     \"Applied psychology\", \"Social psychology\", \"Politics\", \"History\",     \"Promotion (chess)\", \"Statistics\", \"Epistemology\", \"Advertising\",     \"Physics\", \"Literature\", \"Engineering\", \"Philosophy\", \"Art\",     \"Business\", \"Publishing\"), level = c(2L, 0L, 0L, 0L, 1L,     0L, 2L, 1L, 1L, 1L, 1L, 1L, 2L, 0L, 3L, 1L, 1L, 1L, 0L, 1L,     0L, 0L, 0L, 0L, 2L), score = c(100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4309994284\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A1760078977\",     works_count = 4L, display_name = \"Felix D. Schönbrodt\",     orcid = \"https://orcid.org/0000-0002-8282-3910\", works_api_url = \"https://api.openalex.org/works?filter=author.id:A1760078977\",     cited_by_count = 1L, relevance_score = 41.59327, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = c(2023L, 2019L,     2015L), works_count = c(2L, 1L, 1L), cited_by_count = c(1L,     0L, 0L)), class = \"data.frame\", row.names = c(NA, -3L))),     x_concepts = list(structure(list(id = c(\"https://openalex.org/C41008148\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C81917197\",     \"https://openalex.org/C119857082\", \"https://openalex.org/C154945302\",     \"https://openalex.org/C1276947\", \"https://openalex.org/C8010536\",     \"https://openalex.org/C12590798\", \"https://openalex.org/C29122968\",     \"https://openalex.org/C33923547\", \"https://openalex.org/C34447519\",     \"https://openalex.org/C61797465\", \"https://openalex.org/C62520636\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C75268714\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C99454951\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C121332964\", \"https://openalex.org/C138885662\",     \"https://openalex.org/C144024400\", \"https://openalex.org/C144133560\",     \"https://openalex.org/C149923435\", \"https://openalex.org/C159047783\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q628760\", \"https://www.wikidata.org/wiki/Q2539\",     \"https://www.wikidata.org/wiki/Q11660\", \"https://www.wikidata.org/wiki/Q333\",     \"https://www.wikidata.org/wiki/Q160398\", \"https://www.wikidata.org/wiki/Q3933199\",     \"https://www.wikidata.org/wiki/Q1414816\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q179522\", \"https://www.wikidata.org/wiki/Q1188986\",     \"https://www.wikidata.org/wiki/Q944\", \"https://www.wikidata.org/wiki/Q11190\",     \"https://www.wikidata.org/wiki/Q43478\", \"https://www.wikidata.org/wiki/Q420\",     \"https://www.wikidata.org/wiki/Q932068\", \"https://www.wikidata.org/wiki/Q12483\",     \"https://www.wikidata.org/wiki/Q9471\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q21201\",     \"https://www.wikidata.org/wiki/Q4830453\", \"https://www.wikidata.org/wiki/Q37732\",     \"https://www.wikidata.org/wiki/Q7215\"), display_name = c(\"Computer science\",     \"Psychology\", \"Selection (genetic algorithm)\", \"Machine learning\",     \"Artificial intelligence\", \"Astronomy\", \"Crystallography\",     \"Replication (statistics)\", \"Incentive\", \"Mathematics\", \"Market economy\",     \"Term (time)\", \"Quantum mechanics\", \"Medicine\", \"Natural selection\",     \"Biology\", \"Environmental health\", \"Statistics\", \"Epistemology\",     \"Physics\", \"Philosophy\", \"Sociology\", \"Business\", \"Demography\",     \"Virology\"), level = c(0L, 0L, 2L, 1L, 1L, 1L, 1L, 2L, 2L,     0L, 1L, 2L, 1L, 0L, 3L, 0L, 1L, 1L, 1L, 0L, 0L, 0L, 0L, 1L,     1L), score = c(100, 50, 50, 50, 50, 25, 25, 25, 25, 25, 25,     25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = c(\"openalex\", \"orcid\",     \"mag\"), value = c(\"https://openalex.org/A1760078977\", \"https://orcid.org/0000-0002-8282-3910\",     \"1760078977\")), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA,     -3L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4297411539\", works_count = 1L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4297411539\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C27206212\",     \"https://openalex.org/C27415008\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C55587333\", \"https://openalex.org/C71924100\",     \"https://openalex.org/C111472728\", \"https://openalex.org/C118552586\",     \"https://openalex.org/C127413603\", \"https://openalex.org/C138885662\",     \"https://openalex.org/C159110408\", \"https://openalex.org/C162324750\",     \"https://openalex.org/C199539241\", \"https://openalex.org/C539667460\",     \"https://openalex.org/C2522767166\", \"https://openalex.org/C2780422510\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q34178\", \"https://www.wikidata.org/wiki/Q7256382\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q1133029\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q7867\", \"https://www.wikidata.org/wiki/Q11023\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q121176\",     \"https://www.wikidata.org/wiki/Q8134\", \"https://www.wikidata.org/wiki/Q7748\",     \"https://www.wikidata.org/wiki/Q2414942\", \"https://www.wikidata.org/wiki/Q2374463\",     \"https://www.wikidata.org/wiki/Q17027938\"), display_name = c(\"Psychology\",     \"Political science\", \"Theology\", \"Psychological intervention\",     \"Computer science\", \"Engineering ethics\", \"Medicine\", \"Epistemology\",     \"Psychiatry\", \"Engineering\", \"Philosophy\", \"Nursing\", \"Economics\",     \"Law\", \"Management science\", \"Data science\", \"Humanity\"),         level = c(0L, 0L, 1L, 2L, 0L, 1L, 0L, 1L, 1L, 0L, 0L,         1L, 0L, 1L, 1L, 1L, 2L), score = c(100, 100, 100, 100,         100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,         100, 100)), class = \"data.frame\", row.names = c(NA, -17L    ))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4297411539\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4303049983\",     works_count = 1L, display_name = \"Felix D. Schönbrodt\",     orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4303049983\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C12590798\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C33923547\",     \"https://openalex.org/C36289849\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C75268714\",     \"https://openalex.org/C81917197\", \"https://openalex.org/C86803240\",     \"https://openalex.org/C99454951\", \"https://openalex.org/C105795698\",     \"https://openalex.org/C119857082\", \"https://openalex.org/C144024400\",     \"https://openalex.org/C149923435\", \"https://openalex.org/C154945302\",     \"https://openalex.org/C159047783\", \"https://openalex.org/C179518139\",     \"https://openalex.org/C2908647359\"), wikidata = c(\"https://www.wikidata.org/wiki/Q3933199\",     \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q34749\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q43478\",     \"https://www.wikidata.org/wiki/Q628760\", \"https://www.wikidata.org/wiki/Q420\",     \"https://www.wikidata.org/wiki/Q932068\", \"https://www.wikidata.org/wiki/Q12483\",     \"https://www.wikidata.org/wiki/Q2539\", \"https://www.wikidata.org/wiki/Q21201\",     \"https://www.wikidata.org/wiki/Q37732\", \"https://www.wikidata.org/wiki/Q11660\",     \"https://www.wikidata.org/wiki/Q7215\", \"https://www.wikidata.org/wiki/Q5140297\",     \"https://www.wikidata.org/wiki/Q2625603\"), display_name = c(\"Replication (statistics)\",     \"Psychology\", \"Mathematics\", \"Social science\", \"Computer science\",     \"Medicine\", \"Natural selection\", \"Selection (genetic algorithm)\",     \"Biology\", \"Environmental health\", \"Statistics\", \"Machine learning\",     \"Sociology\", \"Demography\", \"Artificial intelligence\", \"Virology\",     \"Coding (social sciences)\", \"Population\"), level = c(2L,     0L, 0L, 1L, 0L, 0L, 3L, 2L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 1L,     2L, 2L), score = c(100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -18L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4303049983\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4309994299\",     works_count = 1L, display_name = \"Felix D. Schönbrodt\",     orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4309994299\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C14036430\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C17744445\",     \"https://openalex.org/C21547014\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C41895202\", \"https://openalex.org/C50522688\",     \"https://openalex.org/C54355233\", \"https://openalex.org/C55587333\",     \"https://openalex.org/C62520636\", \"https://openalex.org/C78458016\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C94625758\",     \"https://openalex.org/C95444343\", \"https://openalex.org/C98045186\",     \"https://openalex.org/C98147612\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C111919701\", \"https://openalex.org/C121332964\",     \"https://openalex.org/C124952713\", \"https://openalex.org/C127413603\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C139719470\",     \"https://openalex.org/C142362112\", \"https://openalex.org/C144133560\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q3736076\",     \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q1423657\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q189833\",     \"https://www.wikidata.org/wiki/Q7162\", \"https://www.wikidata.org/wiki/Q1133029\",     \"https://www.wikidata.org/wiki/Q944\", \"https://www.wikidata.org/wiki/Q840400\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q7163\",     \"https://www.wikidata.org/wiki/Q7141\", \"https://www.wikidata.org/wiki/Q205663\",     \"https://www.wikidata.org/wiki/Q215599\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q9135\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q8242\", \"https://www.wikidata.org/wiki/Q11023\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q39680\",     \"https://www.wikidata.org/wiki/Q735\", \"https://www.wikidata.org/wiki/Q4830453\"    ), display_name = c(\"Function (biology)\", \"Psychology\", \"Political science\",     \"Operations management\", \"Computer science\", \"Linguistics\",     \"Economic growth\", \"Genetics\", \"Engineering ethics\", \"Quantum mechanics\",     \"Evolutionary biology\", \"Biology\", \"Politics\", \"Cell biology\",     \"Process (computing)\", \"Promotion (chess)\", \"Epistemology\",     \"Operating system\", \"Physics\", \"Literature\", \"Engineering\",     \"Philosophy\", \"Macroeconomics\", \"Art\", \"Business\"), level = c(2L,     0L, 0L, 1L, 0L, 1L, 1L, 1L, 1L, 1L, 1L, 0L, 2L, 1L, 2L, 3L,     1L, 1L, 0L, 1L, 0L, 0L, 1L, 0L, 0L), score = c(100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4309994299\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4312021398\",     works_count = 1L, display_name = \"Felix D Schönbrodt\", orcid = NA,     works_api_url = \"https://api.openalex.org/works?filter=author.id:A4312021398\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2023L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C19165224\",     \"https://openalex.org/C36289849\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C77805123\", \"https://openalex.org/C86803240\",     \"https://openalex.org/C95457728\", \"https://openalex.org/C108827166\",     \"https://openalex.org/C110379092\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C111919701\", \"https://openalex.org/C122980154\",     \"https://openalex.org/C127313418\", \"https://openalex.org/C138496976\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C144024400\",     \"https://openalex.org/C151730666\", \"https://openalex.org/C166957645\",     \"https://openalex.org/C196187386\", \"https://openalex.org/C199539241\",     \"https://openalex.org/C205649164\", \"https://openalex.org/C2779343474\",     \"https://openalex.org/C2779438500\"), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q36442\", \"https://www.wikidata.org/wiki/Q23404\",     \"https://www.wikidata.org/wiki/Q34749\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q161272\", \"https://www.wikidata.org/wiki/Q420\",     \"https://www.wikidata.org/wiki/Q309\", \"https://www.wikidata.org/wiki/Q175975\",     \"https://www.wikidata.org/wiki/Q1571836\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q9135\", \"https://www.wikidata.org/wiki/Q205555\",     \"https://www.wikidata.org/wiki/Q1069\", \"https://www.wikidata.org/wiki/Q175002\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q21201\",     \"https://www.wikidata.org/wiki/Q7205\", \"https://www.wikidata.org/wiki/Q23498\",     \"https://www.wikidata.org/wiki/Q1050187\", \"https://www.wikidata.org/wiki/Q7748\",     \"https://www.wikidata.org/wiki/Q1071\", \"https://www.wikidata.org/wiki/Q3109175\",     \"https://www.wikidata.org/wiki/Q27070331\"), display_name = c(\"Psychology\",     \"Political science\", \"Anthropology\", \"Social science\", \"Computer science\",     \"Social psychology\", \"Biology\", \"History\", \"Internet privacy\",     \"Social environment\", \"Epistemology\", \"Operating system\",     \"Feeling\", \"Geology\", \"Developmental psychology\", \"Philosophy\",     \"Sociology\", \"Paleontology\", \"Archaeology\", \"Sociocultural evolution\",     \"Law\", \"Geography\", \"Context (archaeology)\", \"Honor\"), level = c(0L,     0L, 1L, 1L, 0L, 1L, 0L, 0L, 1L, 2L, 1L, 1L, 2L, 0L, 1L, 0L,     0L, 1L, 1L, 2L, 1L, 0L, 2L, 2L), score = c(100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -24L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4312021398\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4313106037\", works_count = 1L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4313106037\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C77805123\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C95457728\",     \"https://openalex.org/C108827166\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C111919701\", \"https://openalex.org/C122980154\",     \"https://openalex.org/C127313418\", \"https://openalex.org/C138885662\",     \"https://openalex.org/C144024400\", \"https://openalex.org/C151730666\",     \"https://openalex.org/C166957645\", \"https://openalex.org/C205649164\",     \"https://openalex.org/C2779343474\", \"https://openalex.org/C2779438500\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q161272\", \"https://www.wikidata.org/wiki/Q420\",     \"https://www.wikidata.org/wiki/Q309\", \"https://www.wikidata.org/wiki/Q175975\",     \"https://www.wikidata.org/wiki/Q9471\", \"https://www.wikidata.org/wiki/Q9135\",     \"https://www.wikidata.org/wiki/Q205555\", \"https://www.wikidata.org/wiki/Q1069\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q21201\",     \"https://www.wikidata.org/wiki/Q7205\", \"https://www.wikidata.org/wiki/Q23498\",     \"https://www.wikidata.org/wiki/Q1071\", \"https://www.wikidata.org/wiki/Q3109175\",     \"https://www.wikidata.org/wiki/Q27070331\"), display_name = c(\"Psychology\",     \"Computer science\", \"Social psychology\", \"Biology\", \"History\",     \"Internet privacy\", \"Epistemology\", \"Operating system\", \"Feeling\",     \"Geology\", \"Philosophy\", \"Sociology\", \"Paleontology\", \"Archaeology\",     \"Geography\", \"Context (archaeology)\", \"Honor\"), level = c(0L,     0L, 1L, 0L, 0L, 1L, 1L, 1L, 2L, 0L, 0L, 0L, 1L, 1L, 0L, 2L,     2L), score = c(100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -17L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4313106037\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4320861650\",     works_count = 1L, display_name = \"Felix Schönbrodt\", orcid = NA,     works_api_url = \"https://api.openalex.org/works?filter=author.id:A4320861650\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2023L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C33923547\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C145420912\"), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q395\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q853077\"), display_name = c(\"Psychology\",     \"Mathematics\", \"Computer science\", \"Mathematics education\"    ), level = c(0L, 0L, 0L, 1L), score = c(100, 100, 100, 100    )), class = \"data.frame\", row.names = c(NA, -4L))), ids = list(        structure(list(name = \"openalex\", value = \"https://openalex.org/A4320861650\"), class = c(\"tbl_df\",         \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I3018771216\",     affiliation_ror = \"https://ror.org/02jet3w32\", affiliation_display_name = \"LMU Klinikum\",     affiliation_country_code = \"DE\", affiliation_type = \"healthcare\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4323228615\", works_count = 1L,     display_name = \"Felix D. Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4323228615\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2023L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C138885662\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q5891\"), display_name = c(\"Psychology\",     \"Political science\", \"Philosophy\"), level = c(0L, 0L, 0L),         score = c(100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -3L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4323228615\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4354028607\",     works_count = 1L, display_name = \"Felix D. Schönbrodt\",     orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4354028607\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2021L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C8010536\",     \"https://openalex.org/C9893847\", \"https://openalex.org/C33923547\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C41895202\",     \"https://openalex.org/C43617362\", \"https://openalex.org/C95457728\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C111472728\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C154775046\",     \"https://openalex.org/C166957645\", \"https://openalex.org/C185592680\",     \"https://openalex.org/C205649164\", \"https://openalex.org/C2779463800\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q160398\",     \"https://www.wikidata.org/wiki/Q1425625\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q8162\",     \"https://www.wikidata.org/wiki/Q170050\", \"https://www.wikidata.org/wiki/Q309\",     \"https://www.wikidata.org/wiki/Q12483\", \"https://www.wikidata.org/wiki/Q9471\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q188\",     \"https://www.wikidata.org/wiki/Q23498\", \"https://www.wikidata.org/wiki/Q2329\",     \"https://www.wikidata.org/wiki/Q1071\", \"https://www.wikidata.org/wiki/Q5062222\"    ), display_name = c(\"Crystallography\", \"Reproducibility\",     \"Mathematics\", \"Computer science\", \"Linguistics\", \"Chromatography\",     \"History\", \"Statistics\", \"Epistemology\", \"Philosophy\", \"German\",     \"Archaeology\", \"Chemistry\", \"Geography\", \"Center (category theory)\"    ), level = c(1L, 2L, 0L, 0L, 1L, 1L, 0L, 1L, 1L, 0L, 2L,     1L, 0L, 0L, 2L), score = c(100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -15L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4354028607\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4365604770\", works_count = 1L,     display_name = \"Felix D Schönbrodt\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4365604770\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2023L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C11171543\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C33923547\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C70410870\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C73484699\",     \"https://openalex.org/C83546350\", \"https://openalex.org/C105795698\",     \"https://openalex.org/C118552586\", \"https://openalex.org/C119857082\",     \"https://openalex.org/C126322002\", \"https://openalex.org/C142724271\",     \"https://openalex.org/C144024400\", \"https://openalex.org/C151956035\",     \"https://openalex.org/C154945302\", \"https://openalex.org/C169258074\",     \"https://openalex.org/C542102704\", \"https://openalex.org/C2776090404\",     \"https://openalex.org/C2777895361\"), wikidata = c(\"https://www.wikidata.org/wiki/Q41630\",     \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q199906\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q161733\",     \"https://www.wikidata.org/wiki/Q1139051\", \"https://www.wikidata.org/wiki/Q12483\",     \"https://www.wikidata.org/wiki/Q7867\", \"https://www.wikidata.org/wiki/Q2539\",     \"https://www.wikidata.org/wiki/Q11180\", \"https://www.wikidata.org/wiki/Q7208\",     \"https://www.wikidata.org/wiki/Q21201\", \"https://www.wikidata.org/wiki/Q1132755\",     \"https://www.wikidata.org/wiki/Q11660\", \"https://www.wikidata.org/wiki/Q245748\",     \"https://www.wikidata.org/wiki/Q183257\", \"https://www.wikidata.org/wiki/Q1420643\",     \"https://www.wikidata.org/wiki/Q1758614\"), display_name = c(\"Psychoanalysis\",     \"Psychology\", \"Mathematics\", \"Computer science\", \"Clinical psychology\",     \"Medicine\", \"Criminology\", \"Regression\", \"Statistics\", \"Psychiatry\",     \"Machine learning\", \"Internal medicine\", \"Pathology\", \"Sociology\",     \"Logistic regression\", \"Artificial intelligence\", \"Random forest\",     \"Psychotherapist\", \"Recidivism\", \"Longitudinal study\"), level = c(1L,     0L, 0L, 0L, 1L, 0L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 0L, 2L, 1L,     2L, 1L, 2L, 2L), score = c(100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100)), class = \"data.frame\", row.names = c(NA, -20L))),     ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4365604770\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L))): numbers of columns of arguments do not match h_index(\"Markus Bühner\", first_pub_year = 1997) # adjust year of first publication #> Error in (function (..., deparse.level = 1, make.row.names = TRUE, stringsAsFactors = FALSE,     factor.exclude = TRUE) {    match.names <- function(clabs, nmi) {        if (identical(clabs, nmi))             NULL        else if (length(nmi) == length(clabs) && all(nmi %in%             clabs)) {            m <- pmatch(nmi, clabs, 0L)            if (any(m == 0L))                 stop(\"names do not match previous names\")            m        }        else stop(\"names do not match previous names\")    }    allargs <- list(...)    allargs <- allargs[lengths(allargs) > 0L]    if (length(allargs)) {        nr <- vapply(allargs, function(x) if (is.data.frame(x))             .row_names_info(x, 2L)        else if (is.list(x))             length(x[[1L]])        else length(x), 1L)        if (any(n0 <- nr == 0L)) {            if (all(n0))                 return(allargs[[1L]])            allargs <- allargs[!n0]        }    }    n <- length(allargs)    if (n == 0L)         return(list2DF())    nms <- names(allargs)    if (is.null(nms))         nms <- character(n)    cl <- NULL    perm <- rows <- vector(\"list\", n)    if (make.row.names) {        rlabs <- rows        autoRnms <- TRUE        Make.row.names <- function(nmi, ri, ni, nrow) {            if (nzchar(nmi)) {                if (autoRnms)                   autoRnms <<- FALSE                if (ni == 0L)                   character()                else if (ni > 1L)                   paste(nmi, ri, sep = \".\")                else nmi            }            else if (autoRnms && nrow > 0L && identical(ri, seq_len(ni)))                 as.integer(seq.int(from = nrow + 1L, length.out = ni))            else {                if (autoRnms && (nrow > 0L || !identical(ri,                   seq_len(ni))))                   autoRnms <<- FALSE                ri            }        }    }    smartX <- isTRUE(factor.exclude)    nrow <- 0L    value <- clabs <- NULL    all.levs <- list()    for (i in seq_len(n)) {        xi <- allargs[[i]]        nmi <- nms[i]        if (is.matrix(xi))             allargs[[i]] <- xi <- as.data.frame(xi, stringsAsFactors = stringsAsFactors)        if (inherits(xi, \"data.frame\")) {            if (is.null(cl))                 cl <- oldClass(xi)            ri <- attr(xi, \"row.names\")            ni <- length(ri)            if (is.null(clabs))                 clabs <- names(xi)            else {                if (length(xi) != length(clabs))                   stop(\"numbers of columns of arguments do not match\")                pi <- match.names(clabs, names(xi))                if (!is.null(pi))                   perm[[i]] <- pi            }            rows[[i]] <- seq.int(from = nrow + 1L, length.out = ni)            if (make.row.names)                 rlabs[[i]] <- Make.row.names(nmi, ri, ni, nrow)            nrow <- nrow + ni            if (is.null(value)) {                value <- unclass(xi)                nvar <- length(value)                all.levs <- vector(\"list\", nvar)                has.dim <- facCol <- ordCol <- logical(nvar)                if (smartX)                   NA.lev <- ordCol                for (j in seq_len(nvar)) {                  xj <- value[[j]]                  facCol[j] <- fac <- if (!is.null(lj <- levels(xj))) {                    all.levs[[j]] <- lj                    TRUE                  }                  else is.factor(xj)                  if (fac) {                    ordCol[j] <- is.ordered(xj)                    if (smartX && !NA.lev[j])                       NA.lev[j] <- anyNA(lj)                  }                  has.dim[j] <- length(dim(xj)) == 2L                }            }            else for (j in seq_len(nvar)) {                xij <- xi[[j]]                if (is.null(pi) || is.na(jj <- pi[[j]]))                   jj <- j                if (facCol[jj]) {                  if (length(lij <- levels(xij))) {                    all.levs[[jj]] <- unique(c(all.levs[[jj]],                       lij))                    if (ordCol[jj])                       ordCol[jj] <- is.ordered(xij)                    if (smartX && !NA.lev[jj])                       NA.lev[jj] <- anyNA(lij)                  }                  else if (is.character(xij))                     all.levs[[jj]] <- unique(c(all.levs[[jj]],                       xij))                }            }        }        else if (is.list(xi)) {            ni <- range(lengths(xi))            if (ni[1L] == ni[2L])                 ni <- ni[1L]            else stop(\"invalid list argument: all variables should have the same length\")            ri <- seq_len(ni)            rows[[i]] <- seq.int(from = nrow + 1L, length.out = ni)            if (make.row.names)                 rlabs[[i]] <- Make.row.names(nmi, ri, ni, nrow)            nrow <- nrow + ni            if (length(nmi <- names(xi)) > 0L) {                if (is.null(clabs))                   clabs <- nmi                else {                  if (length(xi) != length(clabs))                     stop(\"numbers of columns of arguments do not match\")                  pi <- match.names(clabs, nmi)                  if (!is.null(pi))                     perm[[i]] <- pi                }            }        }        else if (length(xi)) {            rows[[i]] <- nrow <- nrow + 1L            if (make.row.names)                 rlabs[[i]] <- if (nzchar(nmi))                   nmi                else as.integer(nrow)        }    }    nvar <- length(clabs)    if (nvar == 0L)         nvar <- max(lengths(allargs))    if (nvar == 0L)         return(list2DF())    pseq <- seq_len(nvar)    if (is.null(value)) {        value <- list()        value[pseq] <- list(logical(nrow))        all.levs <- vector(\"list\", nvar)        has.dim <- facCol <- ordCol <- logical(nvar)        if (smartX)             NA.lev <- ordCol    }    names(value) <- clabs    for (j in pseq) if (length(lij <- all.levs[[j]]))         value[[j]] <- factor(as.vector(value[[j]]), levels = lij,             exclude = if (smartX) {                if (!NA.lev[j])                   NA            }            else factor.exclude, ordered = ordCol[j])    if (any(has.dim)) {        jdim <- pseq[has.dim]        if (!all(df <- vapply(jdim, function(j) inherits(value[[j]],             \"data.frame\"), NA))) {            rmax <- max(unlist(rows))            for (j in jdim[!df]) {                dn <- dimnames(vj <- value[[j]])                rn <- dn[[1L]]                if (length(rn) > 0L)                   length(rn) <- rmax                pj <- dim(vj)[2L]                length(vj) <- rmax * pj                value[[j]] <- array(vj, c(rmax, pj), list(rn,                   dn[[2L]]))            }        }    }    for (i in seq_len(n)) {        xi <- unclass(allargs[[i]])        if (!is.list(xi))             if ((ni <- length(xi)) != nvar) {                if (ni && nvar%%ni != 0)                   warning(gettextf(\"number of columns of result, %d, is not a multiple of vector length %d of arg %d\",                     nvar, ni, i), domain = NA)                xi <- rep_len(xi, nvar)            }        ri <- rows[[i]]        pi <- perm[[i]]        if (is.null(pi))             pi <- pseq        for (j in pseq) {            jj <- pi[j]            xij <- xi[[j]]            if (has.dim[jj]) {                value[[jj]][ri, ] <- xij                if (!is.null(r <- rownames(xij)) && !(inherits(xij,                   \"data.frame\") && .row_names_info(xij) <= 0))                   rownames(value[[jj]])[ri] <- r            }            else {                value[[jj]][ri] <- if (is.factor(xij))                   as.vector(xij)                else xij                if (!is.null(nm <- names(xij)))                   names(value[[jj]])[ri] <- nm            }        }    }    rlabs <- if (make.row.names && !autoRnms) {        rlabs <- unlist(rlabs)        if (anyDuplicated(rlabs))             make.unique(as.character(rlabs), sep = \"\")        else rlabs    }    if (is.null(cl)) {        as.data.frame(value, row.names = rlabs, fix.empty.names = TRUE,             stringsAsFactors = stringsAsFactors)    }    else {        structure(value, class = cl, row.names = if (is.null(rlabs))             .set_row_names(nrow)        else rlabs)    }})(structure(list(id = \"https://openalex.org/A4357809300\", works_count = 181L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4357809300\",     cited_by_count = 4517L, relevance_score = 6328.389, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2012, works_count = c(1L,     12L, 16L, 25L, 13L, 10L, 17L, 8L, 14L, 12L, 0L, 10L), cited_by_count = c(254L,     651L, 659L, 486L, 431L, 395L, 334L, 257L, 287L, 187L, 183L,     122L)), class = \"data.frame\", row.names = c(NA, -12L))),     x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C118552586\",     \"https://openalex.org/C33923547\", \"https://openalex.org/C162324750\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C77805123\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C70410870\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C138496976\",     \"https://openalex.org/C169760540\", \"https://openalex.org/C169900460\",     \"https://openalex.org/C142362112\"), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q7867\",     \"https://www.wikidata.org/wiki/Q395\", \"https://www.wikidata.org/wiki/Q8134\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q161272\",     \"https://www.wikidata.org/wiki/Q12483\", \"https://www.wikidata.org/wiki/Q199906\",     \"https://www.wikidata.org/wiki/Q36442\", \"https://www.wikidata.org/wiki/Q175002\",     \"https://www.wikidata.org/wiki/Q207011\", \"https://www.wikidata.org/wiki/Q2200417\",     \"https://www.wikidata.org/wiki/Q735\"), display_name = c(\"Psychology\",     \"Medicine\", \"Computer science\", \"Biology\", \"Psychiatry\",     \"Mathematics\", \"Economics\", \"Philosophy\", \"Social psychology\",     \"Statistics\", \"Clinical psychology\", \"Political science\",     \"Developmental psychology\", \"Neuroscience\", \"Cognition\",     \"Art\"), level = c(0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L,     1L, 0L, 1L, 1L, 2L, 0L), score = c(74.6, 58.6, 45.9, 42,     40.3, 39.2, 36.5, 35.4, 34.3, 33.7, 29.8, 28.2, 28.2, 27.1,     22.1, 21.5)), class = \"data.frame\", row.names = c(NA, -16L    ))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4357809300\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A2101030386\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = \"https://orcid.org/0000-0002-0597-8708\",     works_api_url = \"https://api.openalex.org/works?filter=author.id:A2101030386\",     cited_by_count = 205L, relevance_score = 1348.1713, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2012, works_count = c(0L,     0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L), cited_by_count = c(3L,     11L, 9L, 16L, 20L, 15L, 13L, 22L, 23L, 13L, 14L, 6L)), class = \"data.frame\", row.names = c(NA,     -12L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C2865642\",     \"https://openalex.org/C11171543\", \"https://openalex.org/C15744967\",     \"https://openalex.org/C21963081\", \"https://openalex.org/C33923547\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C53059260\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C77805123\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C105795698\",     \"https://openalex.org/C107418235\", \"https://openalex.org/C118552586\",     \"https://openalex.org/C119857082\", \"https://openalex.org/C121955636\",     \"https://openalex.org/C127816348\", \"https://openalex.org/C144133560\",     \"https://openalex.org/C162324750\", \"https://openalex.org/C169760540\",     \"https://openalex.org/C169900460\", \"https://openalex.org/C175444787\",     \"https://openalex.org/C180747234\", \"https://openalex.org/C187288502\",     \"https://openalex.org/C196083921\", \"https://openalex.org/C2781249084\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q378132\",     \"https://www.wikidata.org/wiki/Q41630\", \"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q11337567\", \"https://www.wikidata.org/wiki/Q395\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q374758\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q161272\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q12483\",     \"https://www.wikidata.org/wiki/Q1520565\", \"https://www.wikidata.org/wiki/Q7867\",     \"https://www.wikidata.org/wiki/Q2539\", \"https://www.wikidata.org/wiki/Q4116214\",     \"https://www.wikidata.org/wiki/Q127588\", \"https://www.wikidata.org/wiki/Q4830453\",     \"https://www.wikidata.org/wiki/Q8134\", \"https://www.wikidata.org/wiki/Q207011\",     \"https://www.wikidata.org/wiki/Q2200417\", \"https://www.wikidata.org/wiki/Q39072\",     \"https://www.wikidata.org/wiki/Q23373\", \"https://www.wikidata.org/wiki/Q641118\",     \"https://www.wikidata.org/wiki/Q7915758\", \"https://www.wikidata.org/wiki/Q908656\"    ), display_name = c(\"Big Five personality traits\", \"Psychoanalysis\",     \"Psychology\", \"Working memory\", \"Mathematics\", \"Computer science\",     \"Multilevel model\", \"Medicine\", \"Social psychology\", \"Biology\",     \"Statistics\", \"Human multitasking\", \"Psychiatry\", \"Machine learning\",     \"Accounting\", \"Extraversion and introversion\", \"Business\",     \"Economics\", \"Neuroscience\", \"Cognition\", \"Microeconomics\",     \"Cognitive psychology\", \"Personality\", \"Variance (accounting)\",     \"Preference\"), level = c(3L, 1L, 0L, 3L, 0L, 0L, 2L, 0L,     1L, 0L, 1L, 2L, 1L, 1L, 1L, 4L, 0L, 0L, 1L, 2L, 1L, 1L, 2L,     2L, 2L), score = c(100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = c(\"openalex\", \"orcid\",     \"mag\"), value = c(\"https://openalex.org/A2101030386\", \"https://orcid.org/0000-0002-0597-8708\",     \"2101030386\")), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA,     -3L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4354867179\", works_count = 38L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4354867179\",     cited_by_count = 155L, relevance_score = 1199.7758, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023:2012, works_count = c(0L,     0L, 0L, 0L, 1L, 2L, 0L, 0L, 1L, 1L, 2L, 1L), cited_by_count = c(4L,     16L, 20L, 23L, 5L, 3L, 12L, 12L, 1L, 4L, 1L, 1L)), class = \"data.frame\", row.names = c(NA,     -12L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C71924100\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C54355233\",     \"https://openalex.org/C126322002\", \"https://openalex.org/C15744967\",     \"https://openalex.org/C29456083\", \"https://openalex.org/C121608353\",     \"https://openalex.org/C143998085\", \"https://openalex.org/C141071460\",     \"https://openalex.org/C185592680\"), wikidata = c(\"https://www.wikidata.org/wiki/Q11190\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q7162\",     \"https://www.wikidata.org/wiki/Q11180\", \"https://www.wikidata.org/wiki/Q9418\",     \"https://www.wikidata.org/wiki/Q1221899\", \"https://www.wikidata.org/wiki/Q12078\",     \"https://www.wikidata.org/wiki/Q162555\", \"https://www.wikidata.org/wiki/Q40821\",     \"https://www.wikidata.org/wiki/Q2329\"), display_name = c(\"Medicine\",     \"Biology\", \"Genetics\", \"Internal medicine\", \"Psychology\",     \"Gynecology\", \"Cancer\", \"Oncology\", \"Surgery\", \"Chemistry\"    ), level = c(0L, 0L, 1L, 1L, 0L, 1L, 2L, 1L, 1L, 0L), score = c(81.6,     50, 39.5, 39.5, 26.3, 26.3, 23.7, 23.7, 21.1, 21.1)), class = \"data.frame\", row.names = c(NA,     -10L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4354867179\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4309376093\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4309376093\",     cited_by_count = 1L, relevance_score = 97.19328, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2022L, works_count = 1L,         cited_by_count = 1L), class = \"data.frame\", row.names = c(NA,     -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C31258907\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C49774154\",     \"https://openalex.org/C60952562\", \"https://openalex.org/C76155785\",     \"https://openalex.org/C107457646\", \"https://openalex.org/C111919701\",     \"https://openalex.org/C127413603\", \"https://openalex.org/C136764020\",     \"https://openalex.org/C144543869\", \"https://openalex.org/C186967261\",     \"https://openalex.org/C199360897\", \"https://openalex.org/C2522767166\",     \"https://openalex.org/C2777904410\"), wikidata = c(\"https://www.wikidata.org/wiki/Q1301371\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q131765\",     \"https://www.wikidata.org/wiki/Q6887246\", \"https://www.wikidata.org/wiki/Q418\",     \"https://www.wikidata.org/wiki/Q207434\", \"https://www.wikidata.org/wiki/Q9135\",     \"https://www.wikidata.org/wiki/Q11023\", \"https://www.wikidata.org/wiki/Q466\",     \"https://www.wikidata.org/wiki/Q2738570\", \"https://www.wikidata.org/wiki/Q5082128\",     \"https://www.wikidata.org/wiki/Q9143\", \"https://www.wikidata.org/wiki/Q2374463\",     \"https://www.wikidata.org/wiki/Q7397\"), display_name = c(\"Computer network\",     \"Computer science\", \"Multimedia\", \"Mobile technology\", \"Telecommunications\",     \"Human–computer interaction\", \"Operating system\", \"Engineering\",     \"World Wide Web\", \"Mobile computing\", \"Mobile device\", \"Programming language\",     \"Data science\", \"Software\"), level = c(1L, 0L, 1L, 3L, 1L,     1L, 1L, 0L, 1L, 2L, 2L, 1L, 1L, 2L), score = c(100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100    )), class = \"data.frame\", row.names = c(NA, -14L))), ids = list(        structure(list(name = \"openalex\", value = \"https://openalex.org/A4309376093\"), class = c(\"tbl_df\",         \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4260795700\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4260795700\",     cited_by_count = 1L, relevance_score = 94.57007, display_name_alternatives = NA,     counts_by_year = list(structure(list(year = 2023L, works_count = 1L,         cited_by_count = 1L), class = \"data.frame\", row.names = c(NA,     -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15708023\",     \"https://openalex.org/C15744967\", \"https://openalex.org/C17744445\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C136764020\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C142362112\",     \"https://openalex.org/C161191863\", \"https://openalex.org/C199539241\",     \"https://openalex.org/C2778805511\"), wikidata = c(\"https://www.wikidata.org/wiki/Q80083\",     \"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q466\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q735\",     \"https://www.wikidata.org/wiki/Q199655\", \"https://www.wikidata.org/wiki/Q7748\",     \"https://www.wikidata.org/wiki/Q1713\"), display_name = c(\"Humanities\",     \"Psychology\", \"Political science\", \"Computer science\", \"World Wide Web\",     \"Philosophy\", \"Art\", \"Library science\", \"Law\", \"Citation\"    ), level = c(1L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 1L, 2L), score = c(100,     100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -10L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4260795700\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4356812462\", works_count = 4L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4356812462\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = NA,     x_concepts = list(structure(list(id = c(\"https://openalex.org/C71924100\",     \"https://openalex.org/C141071460\", \"https://openalex.org/C29456083\",     \"https://openalex.org/C86803240\", \"https://openalex.org/C105702510\",     \"https://openalex.org/C19527891\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C54355233\", \"https://openalex.org/C55587333\",     \"https://openalex.org/C90924648\", \"https://openalex.org/C121332964\",     \"https://openalex.org/C126322002\", \"https://openalex.org/C126894567\",     \"https://openalex.org/C127413603\", \"https://openalex.org/C143998085\",     \"https://openalex.org/C2777744392\", \"https://openalex.org/C2778531004\",     \"https://openalex.org/C2779662851\", \"https://openalex.org/C2780435969\",     \"https://openalex.org/C2781244320\"), wikidata = c(\"https://www.wikidata.org/wiki/Q11190\",     \"https://www.wikidata.org/wiki/Q40821\", \"https://www.wikidata.org/wiki/Q1221899\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q514\",     \"https://www.wikidata.org/wiki/Q1120908\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q7162\", \"https://www.wikidata.org/wiki/Q1133029\",     \"https://www.wikidata.org/wiki/Q120569\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q11180\", \"https://www.wikidata.org/wiki/Q105650\",     \"https://www.wikidata.org/wiki/Q11023\", \"https://www.wikidata.org/wiki/Q162555\",     \"https://www.wikidata.org/wiki/Q5880\", \"https://www.wikidata.org/wiki/Q281490\",     \"https://www.wikidata.org/wiki/Q7161799\", \"https://www.wikidata.org/wiki/Q5625186\",     \"https://www.wikidata.org/wiki/Q813683\"), display_name = c(\"Medicine\",     \"Surgery\", \"Gynecology\", \"Biology\", \"Anatomy\", \"Medical physics\",     \"Computer science\", \"Genetics\", \"Engineering ethics\", \"Gastroenterology\",     \"Physics\", \"Internal medicine\", \"Urology\", \"Engineering\",     \"Oncology\", \"Vagina\", \"Urinary incontinence\", \"Pelvic floor dysfunction\",     \"Gynecologic oncology\", \"Pelvic floor\"), level = c(0L, 1L,     1L, 0L, 1L, 1L, 0L, 1L, 1L, 1L, 0L, 1L, 1L, 0L, 1L, 2L, 2L,     3L, 2L, 2L), score = c(100, 75, 50, 50, 50, 25, 25, 25, 25,     25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25)), class = \"data.frame\", row.names = c(NA,     -20L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4356812462\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A2212317002\", works_count = 1L,     display_name = \"Bühner Markus\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A2212317002\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2014L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C62520636\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C121332964\",     \"https://openalex.org/C178790620\", \"https://openalex.org/C185592680\",     \"https://openalex.org/C2781311116\"), wikidata = c(\"https://www.wikidata.org/wiki/Q944\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q11351\", \"https://www.wikidata.org/wiki/Q2329\",     \"https://www.wikidata.org/wiki/Q83306\"), display_name = c(\"Quantum mechanics\",     \"Medicine\", \"Physics\", \"Organic chemistry\", \"Chemistry\",     \"Group (periodic table)\"), level = c(1L, 0L, 0L, 1L, 0L,     2L), score = c(100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -6L))), ids = list(structure(list(name = c(\"openalex\", \"mag\"    ), value = c(\"https://openalex.org/A2212317002\", \"2212317002\"    )), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA,     -2L))), affiliation_id = NA, affiliation_display_name = NA,     affiliation_ror = NA, affiliation_country_code = NA, affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4308594609\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4308594609\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C18903297\",     \"https://openalex.org/C19875794\", \"https://openalex.org/C33923547\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C41895202\",     \"https://openalex.org/C43214815\", \"https://openalex.org/C49453240\",     \"https://openalex.org/C59822182\", \"https://openalex.org/C62520636\",     \"https://openalex.org/C70410870\", \"https://openalex.org/C71924100\",     \"https://openalex.org/C74143277\", \"https://openalex.org/C86803240\",     \"https://openalex.org/C97355855\", \"https://openalex.org/C98045186\",     \"https://openalex.org/C105795698\", \"https://openalex.org/C111919701\",     \"https://openalex.org/C121332964\", \"https://openalex.org/C127313418\",     \"https://openalex.org/C138496976\", \"https://openalex.org/C138885662\",     \"https://openalex.org/C140390113\", \"https://openalex.org/C141071460\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q7150\", \"https://www.wikidata.org/wiki/Q1207340\",     \"https://www.wikidata.org/wiki/Q395\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q7310987\",     \"https://www.wikidata.org/wiki/Q1592163\", \"https://www.wikidata.org/wiki/Q441\",     \"https://www.wikidata.org/wiki/Q944\", \"https://www.wikidata.org/wiki/Q199906\",     \"https://www.wikidata.org/wiki/Q11190\", \"https://www.wikidata.org/wiki/Q7705812\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q11473\",     \"https://www.wikidata.org/wiki/Q205663\", \"https://www.wikidata.org/wiki/Q12483\",     \"https://www.wikidata.org/wiki/Q9135\", \"https://www.wikidata.org/wiki/Q413\",     \"https://www.wikidata.org/wiki/Q1069\", \"https://www.wikidata.org/wiki/Q175002\",     \"https://www.wikidata.org/wiki/Q5891\", \"https://www.wikidata.org/wiki/Q389391\",     \"https://www.wikidata.org/wiki/Q40821\"), display_name = c(\"Psychology\",     \"Political science\", \"Ecology\", \"Item response theory\", \"Mathematics\",     \"Computer science\", \"Linguistics\", \"Reliability (semiconductor)\",     \"Construct validity\", \"Botany\", \"Quantum mechanics\", \"Clinical psychology\",     \"Medicine\", \"Test theory\", \"Biology\", \"Thermodynamics\", \"Process (computing)\",     \"Statistics\", \"Operating system\", \"Physics\", \"Geology\", \"Developmental psychology\",     \"Philosophy\", \"Classical test theory\", \"Surgery\"), level = c(0L,     0L, 1L, 3L, 0L, 0L, 1L, 3L, 3L, 1L, 1L, 1L, 0L, 3L, 0L, 1L,     2L, 1L, 1L, 0L, 0L, 1L, 0L, 4L, 1L), score = c(100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4308594609\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4310491655\",     works_count = 1L, display_name = \"Markus Bühner\", orcid = NA,     works_api_url = \"https://api.openalex.org/works?filter=author.id:A4310491655\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2022L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15744967\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C21963081\",     \"https://openalex.org/C41008148\", \"https://openalex.org/C41895202\",     \"https://openalex.org/C55493867\", \"https://openalex.org/C56739046\",     \"https://openalex.org/C71924100\", \"https://openalex.org/C86803240\",     \"https://openalex.org/C111919701\", \"https://openalex.org/C118552586\",     \"https://openalex.org/C119857082\", \"https://openalex.org/C138496976\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C142724271\",     \"https://openalex.org/C150899416\", \"https://openalex.org/C154945302\",     \"https://openalex.org/C162324750\", \"https://openalex.org/C169760540\",     \"https://openalex.org/C169900460\", \"https://openalex.org/C171041071\",     \"https://openalex.org/C173608175\", \"https://openalex.org/C179226034\",     \"https://openalex.org/C180747234\", \"https://openalex.org/C185592680\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q9418\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q11337567\", \"https://www.wikidata.org/wiki/Q21198\",     \"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q7094\",     \"https://www.wikidata.org/wiki/Q192060\", \"https://www.wikidata.org/wiki/Q11190\",     \"https://www.wikidata.org/wiki/Q420\", \"https://www.wikidata.org/wiki/Q9135\",     \"https://www.wikidata.org/wiki/Q7867\", \"https://www.wikidata.org/wiki/Q2539\",     \"https://www.wikidata.org/wiki/Q175002\", \"https://www.wikidata.org/wiki/Q5891\",     \"https://www.wikidata.org/wiki/Q7208\", \"https://www.wikidata.org/wiki/Q1820378\",     \"https://www.wikidata.org/wiki/Q11660\", \"https://www.wikidata.org/wiki/Q8134\",     \"https://www.wikidata.org/wiki/Q207011\", \"https://www.wikidata.org/wiki/Q2200417\",     \"https://www.wikidata.org/wiki/Q36870\", \"https://www.wikidata.org/wiki/Q232661\",     \"https://www.wikidata.org/wiki/Q18599\", \"https://www.wikidata.org/wiki/Q23373\",     \"https://www.wikidata.org/wiki/Q2329\"), display_name = c(\"Psychology\",     \"Political science\", \"Working memory\", \"Computer science\",     \"Linguistics\", \"Biochemistry\", \"Knowledge management\", \"Medicine\",     \"Biology\", \"Operating system\", \"Psychiatry\", \"Machine learning\",     \"Developmental psychology\", \"Philosophy\", \"Pathology\", \"Transfer of learning\",     \"Artificial intelligence\", \"Economics\", \"Neuroscience\", \"Cognition\",     \"First language\", \"Parallel computing\", \"Short-term memory\",     \"Cognitive psychology\", \"Chemistry\"), level = c(0L, 0L, 3L,     0L, 1L, 1L, 1L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 1L, 2L, 1L, 0L,     1L, 2L, 2L, 1L, 4L, 1L, 0L), score = c(100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -25L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4310491655\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = NA,     affiliation_display_name = NA, affiliation_ror = NA, affiliation_country_code = NA,     affiliation_type = NA), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(id = \"https://openalex.org/A4354999017\",     works_count = 1L, display_name = \"Markus Bühner\", orcid = NA,     works_api_url = \"https://api.openalex.org/works?filter=author.id:A4354999017\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2017L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C41895202\",     \"https://openalex.org/C52119013\", \"https://openalex.org/C66938386\",     \"https://openalex.org/C78519656\", \"https://openalex.org/C95457728\",     \"https://openalex.org/C97355855\", \"https://openalex.org/C121332964\",     \"https://openalex.org/C124952713\", \"https://openalex.org/C127413603\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C142362112\",     \"https://openalex.org/C164913051\", \"https://openalex.org/C2778712887\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q8162\", \"https://www.wikidata.org/wiki/Q50637\",     \"https://www.wikidata.org/wiki/Q633538\", \"https://www.wikidata.org/wiki/Q101333\",     \"https://www.wikidata.org/wiki/Q309\", \"https://www.wikidata.org/wiki/Q11473\",     \"https://www.wikidata.org/wiki/Q413\", \"https://www.wikidata.org/wiki/Q8242\",     \"https://www.wikidata.org/wiki/Q11023\", \"https://www.wikidata.org/wiki/Q5891\",     \"https://www.wikidata.org/wiki/Q735\", \"https://www.wikidata.org/wiki/Q482\",     \"https://www.wikidata.org/wiki/Q102836\"), display_name = c(\"Linguistics\",     \"Art history\", \"Structural engineering\", \"Mechanical engineering\",     \"History\", \"Thermodynamics\", \"Physics\", \"Literature\", \"Engineering\",     \"Philosophy\", \"Art\", \"Poetry\", \"Spring (device)\"), level = c(1L,     1L, 1L, 1L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 2L, 2L), score = c(100,     100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100    )), class = \"data.frame\", row.names = c(NA, -13L))), ids = list(        structure(list(name = \"openalex\", value = \"https://openalex.org/A4354999017\"), class = c(\"tbl_df\",         \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4357989656\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4357989656\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2018L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = \"https://openalex.org/C138885662\",         wikidata = \"https://www.wikidata.org/wiki/Q5891\", display_name = \"Philosophy\",         level = 0L, score = 100), class = \"data.frame\", row.names = c(NA,     -1L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4357989656\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L)), structure(list(    id = \"https://openalex.org/A4364083847\", works_count = 1L,     display_name = \"Markus Bühner\", orcid = NA, works_api_url = \"https://api.openalex.org/works?filter=author.id:A4364083847\",     cited_by_count = 0L, display_name_alternatives = NA, counts_by_year = list(        structure(list(year = 2023L, works_count = 1L, cited_by_count = 0L), class = \"data.frame\", row.names = c(NA,         -1L))), x_concepts = list(structure(list(id = c(\"https://openalex.org/C15708023\",     \"https://openalex.org/C17744445\", \"https://openalex.org/C41008148\",     \"https://openalex.org/C111919701\", \"https://openalex.org/C136764020\",     \"https://openalex.org/C138885662\", \"https://openalex.org/C142362112\",     \"https://openalex.org/C161191863\", \"https://openalex.org/C199539241\",     \"https://openalex.org/C2778805511\", \"https://openalex.org/C2780154274\"    ), wikidata = c(\"https://www.wikidata.org/wiki/Q80083\", \"https://www.wikidata.org/wiki/Q36442\",     \"https://www.wikidata.org/wiki/Q21198\", \"https://www.wikidata.org/wiki/Q9135\",     \"https://www.wikidata.org/wiki/Q466\", \"https://www.wikidata.org/wiki/Q5891\",     \"https://www.wikidata.org/wiki/Q735\", \"https://www.wikidata.org/wiki/Q199655\",     \"https://www.wikidata.org/wiki/Q7748\", \"https://www.wikidata.org/wiki/Q1713\",     \"https://www.wikidata.org/wiki/Q7126717\"), display_name = c(\"Humanities\",     \"Political science\", \"Computer science\", \"Operating system\",     \"World Wide Web\", \"Philosophy\", \"Art\", \"Library science\",     \"Law\", \"Citation\", \"Download\"), level = c(1L, 0L, 0L, 1L,     1L, 0L, 0L, 1L, 1L, 2L, 2L), score = c(100, 100, 100, 100,     100, 100, 100, 100, 100, 100, 100)), class = \"data.frame\", row.names = c(NA,     -11L))), ids = list(structure(list(name = \"openalex\", value = \"https://openalex.org/A4364083847\"), class = c(\"tbl_df\",     \"tbl\", \"data.frame\"), row.names = c(NA, -1L))), affiliation_id = \"https://openalex.org/I8204097\",     affiliation_ror = \"https://ror.org/05591te55\", affiliation_display_name = \"Ludwig-Maximilians-Universität München\",     affiliation_country_code = \"DE\", affiliation_type = \"education\"), class = c(\"tbl_df\", \"tbl\", \"data.frame\"), row.names = c(NA, -1L))): numbers of columns of arguments do not match"},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the upper trimmed mean of a vector — upper_trim_mean","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"Calculates upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"upper_trim_mean(x, trim)"},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"x numeric vector trim numeric value 0 1 indicating proportion values trim top","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"numeric value representing upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"x <- c(1,2,3,4,5,6,7) upper_trim_mean(x, 0.2) #> [1] 3"}]
