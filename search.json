[{"path":"https://nicebread.github.io/OAmetrics/articles/pub_similarity.html","id":"third-attempt-use-the-orcid-record","dir":"Articles","previous_headings":"","what":"Third attempt: Use the ORCID record","title":"Computing the similarity of papers to an author's core set","text":"(Note: code executed vignette, needs ORCID authentication). experience, ORCID record fewer publications OpenAlex, mostly correct. Hence, ORCID mostly true positives quite false negatives, OpenAlex true positive cost false positives. Can combine strengths ? , try use ORCID publication record reference set find false positive OpenAlex record: publications added OpenAlex, valid? Without selection ORCID similarity: selection ORCID similarity (cutoff = .05): Hence, candidates invalidly assigned publications :","code":"library(rorcid) library(openalexR) library(janitor) library(dplyr)  au <- oa_fetch(entity=\"author\", id=author.id)  au$orcid  library(httr)  orcid_works <- rorcid::works(substr(au$orcid, 19, 38)) %>%   as_tibble() %>%   janitor::clean_names() %>%   dplyr::mutate(created_date_value = anytime::anydate(created_date_value/1000))  orcid_works_cleaned <- orcid_works %>% filter(!is.na(publication_date_year_value))       orcid_works_cleaned$dois <- sapply(orcid_works_cleaned$external_ids_external_id, function(x) {     if (length(x) == 0) {       return(NA)     } else {       x2 <- x[x[, \"external-id-type\"] == \"doi\", ]       if (nrow(x2) > 0) {         return(x2[1, \"external-id-normalized.value\"])       } else {         return(NA)       }     }     })      orcid_works_cleaned$dois <- paste0(\"https://doi.org/\", orcid_works_cleaned$dois)     works$in_ORCID <- works$doi %in%  orcid_works_cleaned$dois works_reduced$in_ORCID <- works_reduced$doi %in%  orcid_works_cleaned$dois con.wide$in_ORCID <- con.wide$doi %in%  orcid_works_cleaned$dois        # add the ORCID mean concept vector in row 1 as the reference mean_ORCID_vector <- colMeans(con.mat[con.wide$in_ORCID, ]) con.mat.addMean2 <- rbind(mean_ORCID_vector, con.mat)  # compute cosine similarity sim2 <- lsa::cosine(t(as.matrix(con.mat.addMean2)))  # extract distance to the core concept vector sim_df2 <- data.frame(doi=con.wide$doi, ORCID_sim=sim2[1, -1]) works <- left_join(works, sim_df2, by=\"doi\") works_reduced <- left_join(works_reduced, sim_df2, by=\"doi\")  plot(works_reduced$core_sim, works_reduced$ORCID_sim) cor(works_reduced$core_sim, works_reduced$ORCID_sim)  works_reduced %>% arrange(-core_sim) %>% select(core_sim, valid, display_name, so, publication_year) %>% tail(20) works_reduced %>% arrange(-ORCID_sim) %>% select(ORCID_sim, valid, display_name, so, publication_year) %>% tail(20)  ggplot(works_reduced, aes(x=core_sim, y=ORCID_sim, color=valid)) + geom_point() + geom_text_repel(aes(label=ID)) ggplot(works_reduced %>% filter(ORCID_sim < .10), aes(x=core_sim, y=ORCID_sim, color=valid)) + geom_point() + geom_text_repel(aes(label=ID))  ggplot(works_reduced %>% filter(ORCID_sim < .10), aes(x=lonely_wolf_index, y=ORCID_sim, color=valid, shape=in_ORCID)) + geom_point() + geom_text_repel(aes(label=ID)) table(\"in ORCID\"=works_reduced$in_ORCID, \"Valid\"=works_reduced$valid) table(\"in ORCID\"=works_reduced$in_ORCID, \"Valid\"=works$valid, \"outlier\"=works_reduced$ORCID_sim <=.05 & !works_reduced$in_ORCID) works %>% filter(ORCID_sim <=.05 & !in_ORCID) %>% select(display_name, so, publication_year) works %>% filter(is.na(core_sim)) %>% select(display_name, so, publication_year)"},{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Felix D. Schönbrodt. Author, maintainer.","code":""},{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schönbrodt F (2024). OAmetrics: Bibliometric Indices Based OpenAlex API. R package version 0.3.3, https://nicebread.github.io/OAmetrics/.","code":"@Manual{,   title = {OAmetrics: Bibliometric Indices Based on the OpenAlex API},   author = {Felix D. Schönbrodt},   year = {2024},   note = {R package version 0.3.3},   url = {https://nicebread.github.io/OAmetrics/}, }"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"oametrics","dir":"","previous_headings":"","what":"Bibliometric Indices Based on the OpenAlex API","title":"Bibliometric Indices Based on the OpenAlex API","text":"R package computing several bibliometric indices calling OpenAlex database API. can install developer version OAmetrics GitHub :","code":"install.packages(\"remotes\") remotes::install_github(\"nicebread/OAmetrics\")"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Bibliometric Indices Based on the OpenAlex API","text":"Go package’s website.","code":""},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"known-issues--todos","dir":"","previous_headings":"","what":"Known issues / TODOs","title":"Bibliometric Indices Based on the OpenAlex API","text":"FNCS: paper assigned multiple fields, weighted average. Currently, function implicitly assumes look single field. get_reference_set: around 20% sampled document duplicates. Ensure unique documents sampled (use paging?)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"FNCS reflects impact paper relative reference set, namely publications type (typically, journal articles), published year, field. “field” can operationalized, example, top-level concepts assigned OpenAlex database. reference set compiled, FNCS paper computed raw citation count divided average citation count papers reference set. can interpreted ratio: value 1 means paper received many citations average paper reference set, 2 means received two times many citations. percentage rank \"CP-EX\" measure described Bornmann & Williams (2020), returns percentage publications strictly less citations (\"less equal\"). many publications 0 citations, alternative CP-measure (return \"less equal\") returns often high percentiles although paper 0 citations. intuitive. percentile rank, function applies linear interpolation empirical reference data (cf. Bornmann & Williams, 2020) using function provided Tal Galili (https://stats.stackexchange.com/q/230458). FNPR monotonic transformation FNCS; except adding new aspects interpretation providing robustness outliers, add much information compared FNCS.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"FNCS(   dois = NULL,   papers = NULL,   ref_set = NULL,   upper_trim = 0,   verbose = TRUE )"},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"dois character vector DOI paper FNCS computed. Citation counts freshly downloaded oa_fetch call. Either provide dois papers. papers data frame papers analyzed, provided oa_fetch call. case citation counts freshly retrieved, taken object. Either provide dois papers. ref_set data frame containing reference set paper interest. object get_reference_set function, needs following columns: publication_year cited_by_count. upper_trim numeric value 0 1 indicates fraction values trimmed upper end reference set. Scheidsteger et al. (2023) remove upper 1 percent citation counts using OpenAlex. affects FNCS, percentile rank (FNPR). verbose Show diagnostic information?","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"list containing computed FNCS percentile rank paper. latter CP-EX measure means \"many citations reference set less citations target paper\".","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"Bornmann, L., & Williams, R. (2020). evaluation percentile measures citation impact, proposal making better. Scientometrics, 124(2), 1457–1478. https://doi.org/10.1007/s11192-020-03512-7 Scheidsteger, T., Haunschild, R., & Bornmann, L. (2023). similar field-normalized scores different free commercial databases calculated large German universities? https://dapp.orvium.io/deposits/6441118c643beb0d90fc543f/view","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"if (FALSE) { # \\dontrun{ # TODO: ref_set does not exist yet FNCS(dois = \"10.1177/2515245918810225\", ref_set = ref_set, upper_trim = .01) } # }"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":null,"dir":"Reference","previous_headings":"","what":"ecdf2 — ecdf2","title":"ecdf2 — ecdf2","text":"Calculates linearly interpolated empirical cumulative distribution function (ecdf) vector values. function provided Tal Galili StackOverflow.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecdf2 — ecdf2","text":"","code":"ecdf2(x)"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecdf2 — ecdf2","text":"x vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ecdf2 — ecdf2","text":"function calculates linearly interpolated ecdf vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ecdf2 — ecdf2","text":"","code":"x <- c(0,0,0,0,0,0,1,1,1,1,2,2,2,5,7,11,20,100) ecdf2(x) #> Empirical CDF  #> Call: ecdf2(x) #>  x[1:8] =      0,      1,      2,  ...,     20,    100"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_BIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve BIP scores for a list of DOIs — get_BIP","title":"Retrieve BIP scores for a list of DOIs — get_BIP","text":"function takes list DOIs, normalizes , queries BIP API retrieve scores, returns data frame bibliometric indicators.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_BIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve BIP scores for a list of DOIs — get_BIP","text":"","code":"get_BIP(dois, verbose = FALSE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_BIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve BIP scores for a list of DOIs — get_BIP","text":"dois character vector DOIs verbose Show diagnostic information?","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_BIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve BIP scores for a list of DOIs — get_BIP","text":"data frame bibliometric indicators provided DOIs","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_BIP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve BIP scores for a list of DOIs — get_BIP","text":"","code":"dois <- c(\"https://doi.org/10.1080/00223891.2020.1726936\", \"10.1016/j.jrp.2013.05.009\") get_BIP(dois) #>                                             doi      attrank tar_ram #> 1 https://doi.org/10.1080/00223891.2020.1726936 1.876897e-08      NA #> 2     https://doi.org/10.1016/j.jrp.2013.05.009 9.335086e-07      NA #>       pagerank three_year_cc   cc pop_class inf_class imp_class msg #> 1 3.872476e-09            18   18        C4        C5        C4  NA #> 2 6.273676e-08            90 1303        C2        C3        C3  NA"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Journal Impact Factor — get_JIF","title":"Compute the Journal Impact Factor — get_JIF","text":"function computes Journal Impact Factor (JIF) given journal given ISSN target year.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn, year, verbose = FALSE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Journal Impact Factor — get_JIF","text":"issn ISSN journal year target year verbose Whether print verbose output (default FALSE)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Journal Impact Factor — get_JIF","text":"data frame columns journal, ISSN, year, total_citations, citable_items JIF.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn=\"0022-3514\", year=2018)  # JPSP #> Warning:  #> The following work(s) have truncated lists of authors: W4234327326, W4232919639. #> Query each work separately by its identifier to get full list of authors. #> For example: #>   lapply(c(\"W4234327326\", \"W4232919639\"), \\(x) oa_fetch(identifier = x)) #> Details at https://docs.openalex.org/api-entities/authors/limitations. #>                                   display_name      issn year total_citations #> 1 Journal of Personality and Social Psychology 0022-3514 2018            1684 #>   citable_items      JIF #> 1           206 8.174757 get_JIF(issn=\"0890-2070\", year=2019)  # EJP #>                      display_name      issn year total_citations citable_items #> 1 European Journal of Personality 0890-2070 2019             326            82 #>       JIF #> 1 3.97561"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Get network analysis of co-authorships for a given author or set of works — get_network","title":"Get network analysis of co-authorships for a given author or set of works — get_network","text":"function performs network analysis given author set works, providing indicators degree international collaborations.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get network analysis of co-authorships for a given author or set of works — get_network","text":"","code":"get_network(author.id, doi = NA, works = NA, min_edges = 2, verbose = TRUE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get network analysis of co-authorships for a given author or set of works — get_network","text":"author.id ID author network analyzed. Must provided. doi Optional vector DOIs. provided, works DOIs analyzed. works Optional data frame works (already fetched oa_fetch). Either provide dois works. min_edges Minimal number co-authorships. default set 2: way, single co-authorship connections ignored (e.g., ManyLabs-style papers, can lead strong inflation co-authorship connections.) verbose Whether display result string (default TRUE).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get network analysis of co-authorships for a given author or set of works — get_network","text":"list containing various results network analysis, including unique coauthor edges, counts international -country co-authors, country codes coauthors, result string summarizing analysis. also computes normalized Shannon entropy. normalized dividing log_2(n_countries), bounds range [0; 1].","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get network analysis of co-authorships for a given author or set of works — get_network","text":"","code":"# Analyze the network of a specific author get_network(author.id = 'https://openalex.org/A5022479713') #> Requesting url: https://api.openalex.org/works?filter=author.id%3Ahttps%3A%2F%2Fopenalex.org%2FA5022479713%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse #> Getting 2 pages of results with a total of 246 records... #> Warning:  #> The following work(s) have truncated lists of authors: W3216869777. #> Query each work separately by its identifier to get full list of authors. #> For example: #>   lapply(c(\"W3216869777\"), \\(x) oa_fetch(identifier = x)) #> Details at https://docs.openalex.org/api-entities/authors/limitations. #> [1] \"Using the provided works.\" #> [1] \"341 unique co-authors (n>=2 joint papers). 73% from 27 international countries, 27% from the same country. The normalized entropy (ranging from 0=only one country to 1=even distribution among all countries) is 0.65. The 4 countries with the most coauthors are US, DE, NL, GB\" #> $unique_coauthor_edges #> # A tibble: 583 × 3 #>    au_id                            institution_country_code n_coauthorships #>    <chr>                            <chr>                              <int> #>  1 https://openalex.org/A5039784616 DE                                    24 #>  2 https://openalex.org/A5063079579 NL                                    24 #>  3 https://openalex.org/A5056348040 DE                                    22 #>  4 https://openalex.org/A5055189096 DE                                    19 #>  5 https://openalex.org/A5030640837 DE                                    18 #>  6 https://openalex.org/A5083504666 DE                                    18 #>  7 https://openalex.org/A5052525257 DE                                    17 #>  8 https://openalex.org/A5062095202 DE                                    17 #>  9 https://openalex.org/A5000733234 DE                                    13 #> 10 https://openalex.org/A5067075596 NA                                    13 #> # ℹ 573 more rows #>  #> $n_coauthors_international #> [1] 230 #>  #> $n_coauthors_same_country #> [1] 83 #>  #> $entropy_normalized #> [1] 0.6497213 #>  #> $country_codes_repeated #> # A tibble: 28 × 2 #>    institution_country_code     n #>    <chr>                    <int> #>  1 US                          89 #>  2 DE                          83 #>  3 NL                          45 #>  4 GB                          27 #>  5 IT                          10 #>  6 CH                           8 #>  7 SE                           7 #>  8 AT                           6 #>  9 ES                           4 #> 10 GR                           4 #> # ℹ 18 more rows #>  #> $result_string #> [1] \"341 unique co-authors (n>=2 joint papers). 73% from 27 international countries, 27% from the same country. The normalized entropy (ranging from 0=only one country to 1=even distribution among all countries) is 0.65. The 4 countries with the most coauthors are US, DE, NL, GB\" #>  # Analyze the network of a specific author for selected works get_network(author.id = 'https://openalex.org/A5022479713', min_edges=1,     doi = c(         'https://doi.org/10.1037/pspp0000428',         'https://doi.org/10.1017/S0033291722003294',         'https://doi.org/10.5964/ps.6029',         'https://doi.org/10.1146/annurev-psych-020821-114157')) #> Requesting url: https://api.openalex.org/works?filter=doi%3Ahttps%3A%2F%2Fdoi.org%2F10.1037%2Fpspp0000428%7Chttps%3A%2F%2Fdoi.org%2F10.1017%2FS0033291722003294%7Chttps%3A%2F%2Fdoi.org%2F10.5964%2Fps.6029%7Chttps%3A%2F%2Fdoi.org%2F10.1146%2Fannurev-psych-020821-114157%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse #> Getting 1 page of results with a total of 4 records... #> [1] \"35 unique co-authors (n>=1 joint papers). 52% from 4 international countries, 48% from the same country. The normalized entropy (ranging from 0=only one country to 1=even distribution among all countries) is 0.81. The 4 countries with the most coauthors are DE, US, NL, AU\" #> $unique_coauthor_edges #> # A tibble: 35 × 3 #>    au_id                            institution_country_code n_coauthorships #>    <chr>                            <chr>                              <int> #>  1 https://openalex.org/A5001668502 DE                                     1 #>  2 https://openalex.org/A5003489815 DE                                     1 #>  3 https://openalex.org/A5004866926 NL                                     1 #>  4 https://openalex.org/A5006406097 AU                                     1 #>  5 https://openalex.org/A5011404541 AU                                     1 #>  6 https://openalex.org/A5015649291 NA                                     1 #>  7 https://openalex.org/A5017494791 DE                                     1 #>  8 https://openalex.org/A5021314811 SE                                     1 #>  9 https://openalex.org/A5027185097 US                                     1 #> 10 https://openalex.org/A5027692708 DE                                     1 #> # ℹ 25 more rows #>  #> $n_coauthors_international #> [1] 14 #>  #> $n_coauthors_same_country #> [1] 13 #>  #> $entropy_normalized #> [1] 0.8075147 #>  #> $country_codes_repeated #> # A tibble: 5 × 2 #>   institution_country_code     n #>   <chr>                    <int> #> 1 DE                          13 #> 2 US                           7 #> 3 NL                           4 #> 4 AU                           2 #> 5 SE                           1 #>  #> $result_string #> [1] \"35 unique co-authors (n>=1 joint papers). 52% from 4 international countries, 48% from the same country. The normalized entropy (ranging from 0=only one country to 1=even distribution among all countries) is 0.81. The 4 countries with the most coauthors are DE, US, NL, AU\" #>"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reference set for field normalized citation rates — get_reference_set","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"function downloads large set publications certain field certain years. Retrieving 10,000 documents API takes 1-2 min. Ideally, cached locally.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"get_reference_set(   years,   n_per_year = 10000,   concept.id = \"C15744967\",   type = \"article\",   verbose = TRUE,   seed = NULL,   save_intermediate = NULL )"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"years year(s) sample reference field retrieved. n_per_year number documents retrieve per requested year (optional, defaults 10000). Values larger 10000 possible (split multiple OA requests). concept.id vector concept.ids search (optional, defaults \"C15744967\", .e. \"Psychology\") type Reference sets refer type publication; defaults \"article\" verbose Show OA API progress? seed Set seed reproducible analyses. However, underlying OA database changes frequently, results still stable ... save_intermediate path provided , intermediate downloaded files saved path.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"data frame containing document id, year, cited_by_count, number authors retrieved documents","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"# Get reference set for \"Psychology\" for multiple years (small n here for demo) psych_ref <- get_reference_set(   years = 2018:2020, n_per_year = 20,   concept.id = \"C15744967\"  ) #> [1] \"2024-07-29 06:21:06.323118: Retrieving documents for 2018 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2018-01-01%2Cto_publication_date%3A2018-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\" #> [1] \"2024-07-29 06:21:07.104042: Retrieving documents for 2019 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2019-01-01%2Cto_publication_date%3A2019-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\" #> [1] \"2024-07-29 06:21:07.868805: Retrieving documents for 2020 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2020-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Get reference set from files — get_reference_set_from_files","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"get_reference_set function can save intermediate files drive. case download function aborts error, existing files given path can read combined.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"","code":"get_reference_set_from_files(path)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"path relative absolute path files","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"Returns data frame reference set.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute h-index and hIa-index — h_index","title":"Compute h-index and hIa-index — h_index","text":"TODO: use time-window (currently, uses citations since publication).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(   search = NULL,   display_name = NULL,   author.id = NULL,   ORCID = NULL,   first_pub_year = NA,   academic_age_bonus = 0 )"},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute h-index and hIa-index — h_index","text":"search character string author's name searching OpenAlex API. Allows fuzzy search (e.g. without middle initial). display_name character vector exact author's names searching OpenAlex API. cvan provide multiple variants vector. author.id character vector OpenAlex author ID(s) (.e., ID starting \".......\") searching OpenAlex API. ORCID character vector ORCID IDs (either URI number quartet string). first_pub_year integer year author's first publication. provided, estimated retrieved publications. academic_age_bonus Years subtracted active academic life (e.g. due child care). example, SNF subtracts 1.5 years per child (see https://www.snf.ch/en/cciM9NWuvhOVKRxv/news/news-200803-career-funding--researchers-overall-performance-counts).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute h-index and hIa-index — h_index","text":"list containing net academic age, h-index hIa-index author.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute h-index and hIa-index — h_index","text":"Computes h-index hIa-index author. need provide exactly one parameters search, display_name, author.id, ORCID: search allows fuzzy search author's name (e.g. without middle initial). Might return many matches display_name requires exact match allows provide vector multiple versions name (e.g., c(\"Hans Müller\", \"Hans Mueller\", \"Hans J. Muller\")) author.id OpenAlex ID authors. ORCID ORCID (either link number quartet string) Often author listed different IDs OpenAlex database, therefore merged function. function includes wrong authors? need manually screen table author names, record IDs correct aliases target person (starting \".......\") enter author IDs author.id parameter.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(search = \"Felix Schönbrodt\") #> A unique author record has been found:  #>  #> # A tibble: 1 × 3 #>   display_name        works_count cited_by_count #>   <chr>                     <int>          <int> #> 1 Felix D. Schönbrodt         248           9792 #> Warning:  #> The following work(s) have truncated lists of authors: W3216869777. #> Query each work separately by its identifier to get full list of authors. #> For example: #>   lapply(c(\"W3216869777\"), \\(x) oa_fetch(identifier = x)) #> Details at https://docs.openalex.org/api-entities/authors/limitations. #> Computation of academic age (relative to first publication): #> Retrieving year of first publication from data: 2007.  #>  #> The first publication is: 'Interview mit Prof. Dr. Karl Grammer', published in 'Zeitschrift für Medienpsychologie'. It has the top L0 concept 'Philosophy'.  #>  #> Is that plausible? If not, provide `first_pub_year` as a parameter. You can see all works of that author with the following command: #>  #> oa_fetch(entity = 'works', author.id = 'https://openalex.org/A5022479713', is_paratext = F, is_retracted = F, abstract=F) %>% arrange(publication_year) #>  #> $net_academic_age #> [1] 17 #>  #> $h_index #> [1] 32 #>  #> $h_Ia #> [1] 1.058824 #>  #> $first_publication #> # A tibble: 1 × 39 #>   id    title display_name author publication_date so    so_id host_organization #>   <chr> <chr> <chr>        <list> <chr>            <chr> <chr> <chr>             #> 1 http… Inte… Interview m… <df>   2007-10-01       Zeit… http… Hogrefe Verlag    #> # ℹ 31 more variables: issn_l <chr>, url <chr>, pdf_url <chr>, license <chr>, #> #   version <chr>, first_page <chr>, last_page <chr>, volume <chr>, #> #   issue <chr>, is_oa <lgl>, is_oa_anywhere <lgl>, oa_status <chr>, #> #   oa_url <chr>, any_repository_has_fulltext <lgl>, language <chr>, #> #   grants <list>, cited_by_count <int>, counts_by_year <list>, #> #   publication_year <int>, cited_by_api_url <chr>, ids <list>, doi <chr>, #> #   type <chr>, referenced_works <list>, related_works <list>, … #>  #> $academic_age_note #> [1] \"Computation of academic age (relative to first publication):\\nRetrieving year of first publication from data: 2007. \\n\\nThe first publication is: 'Interview mit Prof. Dr. Karl Grammer', published in 'Zeitschrift für Medienpsychologie'. It has the top L0 concept 'Philosophy'. \\n\\nIs that plausible? If not, provide `first_pub_year` as a parameter. You can see all works of that author with the following command:\\n\\noa_fetch(entity = 'works', author.id = 'https://openalex.org/A5022479713', is_paratext = F, is_retracted = F, abstract=F) %>% arrange(publication_year)\\n\\n\" #>  h_index(ORCID = \"https://orcid.org/0000-0002-8282-3910\") #> A unique author record has been found:  #>  #> # A tibble: 1 × 3 #>   display_name        works_count cited_by_count #>   <chr>                     <int>          <int> #> 1 Felix D. Schönbrodt         248           9792 #> Warning:  #> The following work(s) have truncated lists of authors: W3216869777. #> Query each work separately by its identifier to get full list of authors. #> For example: #>   lapply(c(\"W3216869777\"), \\(x) oa_fetch(identifier = x)) #> Details at https://docs.openalex.org/api-entities/authors/limitations. #> Computation of academic age (relative to first publication): #> Retrieving year of first publication from data: 2007.  #>  #> The first publication is: 'Interview mit Prof. Dr. Karl Grammer', published in 'Zeitschrift für Medienpsychologie'. It has the top L0 concept 'Philosophy'.  #>  #> Is that plausible? If not, provide `first_pub_year` as a parameter. You can see all works of that author with the following command: #>  #> oa_fetch(entity = 'works', author.id = 'https://openalex.org/A5022479713', is_paratext = F, is_retracted = F, abstract=F) %>% arrange(publication_year) #>  #> $net_academic_age #> [1] 17 #>  #> $h_index #> [1] 32 #>  #> $h_Ia #> [1] 1.058824 #>  #> $first_publication #> # A tibble: 1 × 39 #>   id    title display_name author publication_date so    so_id host_organization #>   <chr> <chr> <chr>        <list> <chr>            <chr> <chr> <chr>             #> 1 http… Inte… Interview m… <df>   2007-10-01       Zeit… http… Hogrefe Verlag    #> # ℹ 31 more variables: issn_l <chr>, url <chr>, pdf_url <chr>, license <chr>, #> #   version <chr>, first_page <chr>, last_page <chr>, volume <chr>, #> #   issue <chr>, is_oa <lgl>, is_oa_anywhere <lgl>, oa_status <chr>, #> #   oa_url <chr>, any_repository_has_fulltext <lgl>, language <chr>, #> #   grants <list>, cited_by_count <int>, counts_by_year <list>, #> #   publication_year <int>, cited_by_api_url <chr>, ids <list>, doi <chr>, #> #   type <chr>, referenced_works <list>, related_works <list>, … #>  #> $academic_age_note #> [1] \"Computation of academic age (relative to first publication):\\nRetrieving year of first publication from data: 2007. \\n\\nThe first publication is: 'Interview mit Prof. Dr. Karl Grammer', published in 'Zeitschrift für Medienpsychologie'. It has the top L0 concept 'Philosophy'. \\n\\nIs that plausible? If not, provide `first_pub_year` as a parameter. You can see all works of that author with the following command:\\n\\noa_fetch(entity = 'works', author.id = 'https://openalex.org/A5022479713', is_paratext = F, is_retracted = F, abstract=F) %>% arrange(publication_year)\\n\\n\" #>  h_index(\"Markus Bühner\", first_pub_year = 1997) # adjust year of first publication #> A unique author record has been found:  #>  #> # A tibble: 1 × 3 #>   display_name  works_count cited_by_count #>   <chr>               <int>          <int> #> 1 Markus Bühner         213           6330 #> $net_academic_age #> [1] 27 #>  #> $h_index #> [1] 37 #>  #> $h_Ia #> [1] 0.5555556 #>  #> $first_publication #> # A tibble: 1 × 39 #>   id    title display_name author publication_date so    so_id host_organization #>   <chr> <chr> <chr>        <list> <chr>            <chr> <chr> <chr>             #> 1 http… Attr… Attribution… <df>   1998-01-01       Jour… http… American Psychol… #> # ℹ 31 more variables: issn_l <chr>, url <chr>, pdf_url <chr>, license <chr>, #> #   version <chr>, first_page <chr>, last_page <chr>, volume <chr>, #> #   issue <chr>, is_oa <lgl>, is_oa_anywhere <lgl>, oa_status <chr>, #> #   oa_url <chr>, any_repository_has_fulltext <lgl>, language <chr>, #> #   grants <list>, cited_by_count <int>, counts_by_year <list>, #> #   publication_year <int>, cited_by_api_url <chr>, ids <list>, doi <chr>, #> #   type <chr>, referenced_works <list>, related_works <list>, … #>  #> $academic_age_note #> [1] \"\" #>"},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_ORCIDs.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize ORCIDs — normalize_ORCIDs","title":"Normalize ORCIDs — normalize_ORCIDs","text":"function normalizes ORCIDs canonical form (URL profile)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_ORCIDs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize ORCIDs — normalize_ORCIDs","text":"","code":"normalize_ORCIDs(x)"},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_ORCIDs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize ORCIDs — normalize_ORCIDs","text":"x Character vector ORCIDs normalized","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_ORCIDs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize ORCIDs — normalize_ORCIDs","text":"Character vector normalized ORCIDS","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_ORCIDs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize ORCIDs — normalize_ORCIDs","text":"","code":"normalize_ORCIDs(c(\"orcid.org/0000-1234-5678-9111\",     \"0000-1234-5678-9111\", \"  https://orcid.org/0000-1234-5678-9111 \")) #> [1] \"https://orcid.org/0000-1234-5678-9111\" #> [2] \"https://orcid.org/0000-1234-5678-9111\" #> [3] \"https://orcid.org/0000-1234-5678-9111\""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_dois.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize DOIs — normalize_dois","title":"Normalize DOIs — normalize_dois","text":"function normalizes DOIs trimming leading/trailing whitespace, replacing 'dx.doi.org' 'doi.org', replacing 'http:' 'https:', converting DOI lowercase, according DOI specification","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_dois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize DOIs — normalize_dois","text":"","code":"normalize_dois(x, verbose = FALSE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_dois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize DOIs — normalize_dois","text":"x Character vector DOIs normalized verbose Show diagnostic information?","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_dois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize DOIs — normalize_dois","text":"Character vector normalized DOIs","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/normalize_dois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize DOIs — normalize_dois","text":"","code":"normalize_dois(c(\"  10.123.10.1/DOI \", \"http://dx.doi.org/10.456/Doi\")) #> [1] \"https://doi.org/10.123.10.1/doi\" \"https://doi.org/10.456/doi\""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the upper trimmed mean of a vector — upper_trim_mean","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"Calculates upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"upper_trim_mean(x, trim)"},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"x numeric vector trim numeric value 0 1 indicating proportion values trim top","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"numeric value representing upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"x <- c(1,2,3,4,5,6,7) upper_trim_mean(x, 0.2) #> [1] 3"},{"path":[]},{"path":"https://nicebread.github.io/OAmetrics/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"OAmetrics 0.2.0","text":"Add pub_sim:, function computes scores measuring distance work core authors publications. used, example, filter publications erroneously attributed author OpenAlex.","code":""},{"path":"https://nicebread.github.io/OAmetrics/news/index.html","id":"minor-improvements-and-bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements and bug fixes","title":"OAmetrics 0.2.0","text":"Made h-index() robust.","code":""}]
