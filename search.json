[{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Felix D. Schönbrodt. Author, maintainer.","code":""},{"path":"https://nicebread.github.io/OAmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schönbrodt F (2024). OAmetrics: Bibliometric Indices Based OpenAlex API. R package version 0.1.1, https://nicebread.github.io/OAmetrics/.","code":"@Manual{,   title = {OAmetrics: Bibliometric Indices Based on the OpenAlex API},   author = {Felix D. Schönbrodt},   year = {2024},   note = {R package version 0.1.1},   url = {https://nicebread.github.io/OAmetrics/}, }"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"oametrics","dir":"","previous_headings":"","what":"Bibliometric Indices Based on the OpenAlex API","title":"Bibliometric Indices Based on the OpenAlex API","text":"R package computing several bibliometric indices calling OpenAlex database API. can install developer version OAmetrics GitHub :","code":"install.packages(\"remotes\") remotes::install_github(\"nicebread/OAmetrics\")"},{"path":"https://nicebread.github.io/OAmetrics/index.html","id":"known-issues--todos","dir":"","previous_headings":"","what":"Known issues / TODOs","title":"Bibliometric Indices Based on the OpenAlex API","text":"FNCS: paper assigned multiple fields, weighted average. Currently, function implicitly assumes look single field. get_reference_set: around 20% sampled document duplicates. Ensure unique documents sampled (use paging?)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"FNCS reflects impact paper relative reference set, namely publications type (typically, journal articles), published year, field. “field” can operationalized, example, top-level concepts assigned OpenAlex database. reference set compiled, FNCS paper computed raw citation count divided average citation count papers reference set. can interpreted ratio: value 1 means paper received many citations average paper reference set, 2 means received two times many citations. percentage rank \"CP-EX\" measure described Bornmann & Williams (2020), returns percentage publications strictly less citations (\"less equal\"). many publications 0 citations, alternative CP-measure (return \"less equal\") returns often high percentiles although paper 0 citations. intuitive. percentile rank, function applies linear interpolation empirical reference data (cf. Bornmann & Williams, 2020) using function provided Tal Galili (https://stats.stackexchange.com/q/230458). FNPR monotonic transformation FNCS; except adding new aspects interpretation providing robustness outliers, add new information compared tot FNCS.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"FNCS(dois = NULL, papers = NULL, ref_set = NULL, upper_trim = 0)"},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"dois character vector DOI paper FNCS computed. papers data frame papers analyzed, provided oa_fetch call. Either provide dois papers. ref_set data frame containing reference set paper interest. object get_reference_set function. upper_trim numeric value 0 1 indicates fraction values trimmed upper end reference set. Scheidsteger et al. (2023) remove upper 1 percent citation counts using OpenAlex. affects FNCS, percentile rank (FNPR).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"list containing computed FNCS percentile rank paper. latter CP-EX measure means \"many citations reference set less citations target paper\".","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"Bornmann, L., & Williams, R. (2020). evaluation percentile measures citation impact, proposal making better. Scientometrics, 124(2), 1457–1478. https://doi.org/10.1007/s11192-020-03512-7 Scheidsteger, T., Haunschild, R., & Bornmann, L. (2023). similar field-normalized scores different free commercial databases calculated large German universities? https://dapp.orvium.io/deposits/6441118c643beb0d90fc543f/view","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/FNCS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Field Normalized Citation Score (FNCS) and Percentage Rank (FNPR) of a publication — FNCS","text":"","code":"if (FALSE) { # TODO: ref_set does not exist yet FNCS(dois = \"10.1177/2515245918810225\", ref_set = ref_set, upper_trim = .01) }"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":null,"dir":"Reference","previous_headings":"","what":"ecdf2 — ecdf2","title":"ecdf2 — ecdf2","text":"Calculates linearly interpolated empirical cumulative distribution function (ecdf) vector values. function provided Tal Galili StackOverflow.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ecdf2 — ecdf2","text":"","code":"ecdf2(x)"},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ecdf2 — ecdf2","text":"x vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ecdf2 — ecdf2","text":"function calculates linearly interpolated ecdf vector values.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/ecdf2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ecdf2 — ecdf2","text":"","code":"x <- c(0,0,0,0,0,0,1,1,1,1,2,2,2,5,7,11,20,100) ecdf2(x) #> Empirical CDF  #> Call: ecdf2(x) #>  x[1:8] =      0,      1,      2,  ...,     20,    100"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Journal Impact Factor — get_JIF","title":"Compute the Journal Impact Factor — get_JIF","text":"function computes Journal Impact Factor (JIF) given journal given ISSN target year.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn, year, verbose = FALSE)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Journal Impact Factor — get_JIF","text":"issn ISSN journal year target year verbose Whether print verbose output (default FALSE)","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Journal Impact Factor — get_JIF","text":"data frame columns journal, ISSN, year, total_citations, citable_items JIF.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_JIF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Journal Impact Factor — get_JIF","text":"","code":"get_JIF(issn=\"0022-3514\", year=2018)  # JPSP #>                                   display_name      issn year total_citations #> 1 Journal of Personality and Social Psychology 0022-3514 2018            1618 #>   citable_items      JIF #> 1           205 7.892683 get_JIF(issn=\"0890-2070\", year=2019)  # EJP #>                      display_name      issn year total_citations citable_items #> 1 European Journal of Personality 0890-2070 2019             306            82 #>        JIF #> 1 3.731707"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a reference set for field normalized citation rates — get_reference_set","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"function downloads large set publications certain field certain years. Retrieving 10,000 documents API takes 1-2 min. Ideally, cached locally.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"get_reference_set(   years,   n_per_year = 10000,   concept.id = \"C15744967\",   type = \"article\",   verbose = TRUE,   seed = NULL,   save_intermediate = NULL )"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"years year(s) sample reference field retrieved. n_per_year number documents retrieve per requested year (optional, defaults 10000). Values larger 10000 possible (split multiple OA requests). concept.id vector concept.ids search (optional, defaults \"C15744967\", .e. \"Psychology\") type Reference sets refer type publication; defaults \"article\" verbose Show OA API progress? seed Set seed reproducible analyses. However, underlying OA database changes frequently, results still stable ... save_intermediate path provided , intermediate downloaded files saved path.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"data frame containing document id, year, cited_by_count, number authors retrieved documents","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a reference set for field normalized citation rates — get_reference_set","text":"","code":"# Get reference set for \"Psychology\" for multiple years (small n here for demo) psych_ref <- get_reference_set(   years = 2018:2020, n_per_year = 20,   concept.id = \"C15744967\"  ) #> [1] \"2024-01-18 08:03:38.002822: Retrieving documents for 2018 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2018-01-01%2Cto_publication_date%3A2018-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\" #> [1] \"2024-01-18 08:03:38.965837: Retrieving documents for 2019 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2019-01-01%2Cto_publication_date%3A2019-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\" #> [1] \"2024-01-18 08:03:40.081381: Retrieving documents for 2020 ...\" #> Requesting url: https://api.openalex.org/works?filter=concept.id%3AC15744967%2Ctype%3Aarticle%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2020-12-31%2Cis_paratext%3Afalse%2Cis_retracted%3Afalse%2Cauthors_count%3A%3E0%2Chas_doi%3Atrue%2Cprimary_location.source.has_issn%3Atrue&sample=20&select=id%2Cauthorships%2Cpublication_year%2Ccited_by_count #> Getting 1 page of results with a total of 20 records... #> [1] \"Retrieved 20 documents\""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function: Get reference set from files — get_reference_set_from_files","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"get_reference_set function can save intermediate files drive. case download function aborts error, existing files given path can read combined.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"","code":"get_reference_set_from_files(path)"},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"path relative absolute path files","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/get_reference_set_from_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function: Get reference set from files — get_reference_set_from_files","text":"Returns data frame reference set.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute h-index and hIa-index — h_index","title":"Compute h-index and hIa-index — h_index","text":"TODO: use time-window (currently, uses citations since publication).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(   search = NULL,   display_name = NULL,   author.id = NULL,   first_pub_year = NA,   academic_age_bonus = 0 )"},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute h-index and hIa-index — h_index","text":"search character string author's name searching OpenAlex API. Allows fuzzy search (e.g. without middle initial). display_name character vector exact author's names searching OpenAlex API. cvan provide multiple variants vector. author.id character vector OpenAlex author ID(s) (.e., ID starting \".......\") searching OpenAlex API. first_pub_year integer year author's first publication. provided, estimated retrieved publications. academic_age_bonus Years subtracted active academic life (e.g. due child care). example, SNF subtracts 1.5 years per child (see https://www.snf.ch/en/cciM9NWuvhOVKRxv/news/news-200803-career-funding--researchers-overall-performance-counts).","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute h-index and hIa-index — h_index","text":"list containing net academic age, h-index hIa-index author.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute h-index and hIa-index — h_index","text":"Computes h-index hIa-index author. need provide exactly one parameters search, display_name author.id: search allows fuzzy search author's name (e.g. without middle initial). Might return many matches display_name requires exact match allows provide vector multiple versions name (e.g., c(\"Hans Müller\", \"Hans Mueller\", \"Hans J. Muller\")) author.id OpenAlex ID authors. Often author listed different IDs OpenAlex database, therefore merged function. function includes wrong authors? need manually screen table author names, record IDs correct aliases target person (starting \".......\") enter author IDs author.id parameter.","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/h_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute h-index and hIa-index — h_index","text":"","code":"h_index(search = \"Felix Schönbrodt\") #> # A tibble: 5 × 3 #>   display_name        works_count cited_by_count #>   <chr>                     <int>          <int> #> 1 Felix D. Schönbrodt         245           7200 #> 2 NA                           NA             NA #> 3 NA                           NA             NA #> 4 NA                           NA             NA #> 5 NA                           NA             NA #> Computation of academic age (relative to first publication): #> Retrieving year of first publication from data: 2006. Is that plausible? #>  #> $net_academic_age #> [1] 18 #>  #> $h_index #> [1] 27 #>  #> $h_Ia #> [1] 0.8888889 #>  h_index(\"Markus Bühner\", first_pub_year = 1997) # adjust year of first publication #> # A tibble: 5 × 3 #>   display_name  works_count cited_by_count #>   <chr>               <int>          <int> #> 1 Markus Bühner         205           5306 #> 2 NA                     NA             NA #> 3 NA                     NA             NA #> 4 NA                     NA             NA #> 5 NA                     NA             NA #> $net_academic_age #> [1] 27 #>  #> $h_index #> [1] 36 #>  #> $h_Ia #> [1] 0.4814815 #>"},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the upper trimmed mean of a vector — upper_trim_mean","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"Calculates upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"upper_trim_mean(x, trim)"},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"x numeric vector trim numeric value 0 1 indicating proportion values trim top","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"numeric value representing upper trimmed mean vector","code":""},{"path":"https://nicebread.github.io/OAmetrics/reference/upper_trim_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the upper trimmed mean of a vector — upper_trim_mean","text":"","code":"x <- c(1,2,3,4,5,6,7) upper_trim_mean(x, 0.2) #> [1] 3"}]
